[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:07:59,595 INFO [main][AbstractTestContextBootstrapper.java:308] - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.shanjupay.transaction.TestPayChannelService], using SpringBootContextLoader
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:07:59,614 INFO [main][AbstractContextLoader.java:264] - Could not detect default resource locations for test class [com.shanjupay.transaction.TestPayChannelService]: no resource found for suffixes {-context.xml, Context.groovy}.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:07:59,615 INFO [main][AnnotationConfigContextLoaderUtils.java:83] - Could not detect default configuration classes for test class [com.shanjupay.transaction.TestPayChannelService]: TestPayChannelService does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:00,164 INFO [main][SpringBootTestContextBootstrapper.java:247] - Found @SpringBootConfiguration com.shanjupay.transaction.TransactionBootstrap for test class com.shanjupay.transaction.TestPayChannelService
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:00,420 INFO [main][AbstractTestContextBootstrapper.java:248] - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:00,516 INFO [main][AbstractTestContextBootstrapper.java:177] - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@b86de0d, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@81d9a72, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@747f281, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@1169afe1, org.springframework.test.context.support.DirtiesContextTestExecutionListener@2ca26d77, org.springframework.test.context.transaction.TransactionalTestExecutionListener@4808bc9b, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@70e38ce1, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@2ca923bb, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@13df2a8c, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@1ebea008, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@72d6b3ba, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@1787f2a0]
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:02,255 INFO [main][:] - using logger: org.apache.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:02,287 INFO [main][WelcomeLogoApplicationListener.java:63] - 

 :: Dubbo Spring Boot (v2.7.1) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.7.3) : https://github.com/apache/incubator-dubbo
 :: Discuss group : dev@dubbo.apache.org

[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:02,319 INFO [main][OverrideDubboConfigApplicationListener.java:68] - Dubbo Config was overridden by externalized configuration {dubbo.application.name=transaction-service, dubbo.application.qos-enable=false, dubbo.application.qos.port=22250, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20893, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.shanjupay}
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:03,493 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$1b619760] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:03,600 INFO [pool-3-thread-1][AwaitingNonWebApplicationListener.java:140] -  [Dubbo] Current Spring Boot Application is await...
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:04,251 INFO [main][OverrideDubboConfigApplicationListener.java:68] - Dubbo Config was overridden by externalized configuration {dubbo.application.name=transaction-service, dubbo.application.qos-enable=false, dubbo.application.qos.port=22250, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20893, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.shanjupay}
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:05,000 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'spring-boot-http.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:05,015 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'spring-boot-starter-druid.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:05,025 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'spring-boot-mybatis-plus.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:05,034 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'transaction-service.yaml', group: 'SHANJUPAY_GROUP'
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:05,036 INFO [main][PropertySourceBootstrapConfiguration.java:98] - Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource {name='transaction-service.yaml'}, NacosPropertySource {name='spring-boot-mybatis-plus.yaml'}, NacosPropertySource {name='spring-boot-starter-druid.yaml'}, NacosPropertySource {name='spring-boot-http.yaml'}]}
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:05,085 INFO [main][SpringApplication.java:675] - No active profile set, falling back to default profiles: default
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:08,110 WARN [main][EndpointId.java:135] - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:08,113 WARN [main][EndpointId.java:135] - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:08,201 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ApplicationConfig#0, class : org.apache.dubbo.config.ApplicationConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:08,202 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ApplicationConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:08,203 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.RegistryConfig#0, class : org.apache.dubbo.config.RegistryConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:08,203 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.RegistryConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:08,203 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ProtocolConfig#0, class : org.apache.dubbo.config.ProtocolConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:08,203 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ProtocolConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:08,204 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ConsumerConfig#0, class : org.apache.dubbo.config.ConsumerConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:08,204 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ConsumerConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:08,515 INFO [main][RepositoryConfigurationDelegate.java:244] - Multiple Spring Data modules found, entering strict repository configuration mode!
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:08,520 INFO [main][RepositoryConfigurationDelegate.java:126] - Bootstrapping Spring Data repositories in DEFAULT mode.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:08,559 INFO [main][RepositoryConfigurationDelegate.java:182] - Finished Spring Data repository scanning in 18ms. Found 0 repository interfaces.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:08,695 WARN [main][EndpointId.java:135] - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:08,876 INFO [main][ServiceAnnotationBeanPostProcessor.java:204] -  [DUBBO] BeanNameGenerator bean can't be found in BeanFactory with name [org.springframework.context.annotation.internalConfigurationBeanNameGenerator], dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:08,877 INFO [main][ServiceAnnotationBeanPostProcessor.java:206] -  [DUBBO] BeanNameGenerator will be a instance of org.springframework.context.annotation.AnnotationBeanNameGenerator , it maybe a potential problem on bean name generation., dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:09,487 INFO [main][ServiceAnnotationBeanPostProcessor.java:284] -  [DUBBO] The BeanDefinition[Root bean: class [org.apache.dubbo.config.spring.ServiceBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] of ServiceBean has been registered with name : ServiceBean:com.shanjupay.transaction.api.PayChannelService, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:09,488 INFO [main][ServiceAnnotationBeanPostProcessor.java:161] -  [DUBBO] 1 annotated Dubbo's @Service Components { [Bean definition with name 'payChannelServiceImpl': Generic bean: class [com.shanjupay.transaction.service.PayChannelServiceImpl]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\shanjupay\shanjupay-transaction\shanjupay-transaction-service\target\classes\com\shanjupay\transaction\service\PayChannelServiceImpl.class]] } were scanned under package[com.shanjupay], dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:09,491 INFO [main][ConfigurationClassPostProcessor.java:380] - Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboRelaxedBinding2AutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:09,491 INFO [main][ConfigurationClassPostProcessor.java:380] - Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:09,698 INFO [main][GenericScope.java:294] - BeanFactory id=61cd5608-3555-3dd5-ac76-8adf07fc4aac
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:09,785 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:10,008 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ff479463] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:10,190 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties' of type [com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:10,233 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'advisor' of type [org.springframework.aop.support.RegexpMethodPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:10,237 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration$$EnhancerBySpringCGLIB$$8308e367] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:10,278 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubbo.cloud-com.alibaba.cloud.dubbo.env.DubboCloudProperties' of type [com.alibaba.cloud.dubbo.env.DubboCloudProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:10,296 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'metadataJsonResolver' of type [com.alibaba.cloud.dubbo.metadata.resolver.DubboServiceBeanMetadataResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:10,327 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.apache.dubbo.config.ApplicationConfig#0' of type [org.apache.dubbo.config.ApplicationConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:10,334 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboProtocolConfigSupplier' of type [com.alibaba.cloud.dubbo.metadata.DubboProtocolConfigSupplier] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:10,336 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:10,337 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration$$EnhancerBySpringCGLIB$$f5487fe1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:10,345 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration$$EnhancerBySpringCGLIB$$87f28839] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:10,355 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboGenericServiceFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:10,360 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboMetadataConfigServiceProxy' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceProxy] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:10,367 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$4837c1f3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:10,374 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$3c02cab8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:10,387 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.commons.util.UtilAutoConfiguration' of type [org.springframework.cloud.commons.util.UtilAutoConfiguration$$EnhancerBySpringCGLIB$$c6f55de7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:10,396 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'inetUtilsProperties' of type [org.springframework.cloud.commons.util.InetUtilsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:10,399 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'inetUtils' of type [org.springframework.cloud.commons.util.InetUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:10,991 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'nacosProperties' of type [com.alibaba.cloud.nacos.NacosDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:10,998 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'nacosDiscoveryClient' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:11,025 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties' of type [org.springframework.boot.autoconfigure.web.ServerProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:11,029 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$14665ac1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:11,612 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'simpleDiscoveryProperties' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:11,616 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'simpleDiscoveryClient' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:11,622 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'compositeDiscoveryClient' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:11,628 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.util.JSONUtils' of type [com.alibaba.cloud.dubbo.util.JSONUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:11,937 WARN [main][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:0) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:11,938 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository' of type [com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:12,017 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:12,040 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties' of type [org.springframework.boot.autoconfigure.http.HttpProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:12,046 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$4c892697] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:12,078 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'stringHttpMessageConverter' of type [org.springframework.http.converter.StringHttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:12,084 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$865f2297] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:12,091 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$5adb13f4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:12,100 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$d27d60d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:12,107 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$c83ebbfc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:12,116 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:12,122 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:12,133 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$ef0a332a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:12,150 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:12,158 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$3ce6b183] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:12,171 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:12,177 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:12,185 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:12,192 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:12,236 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:12,256 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'mappingJackson2HttpMessageConverter' of type [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:12,264 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$$EnhancerBySpringCGLIB$$197b5ff7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:12,276 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'messageConverters' of type [org.springframework.boot.autoconfigure.http.HttpMessageConverters] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:12,280 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:12,288 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:12,296 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:12,297 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:12,314 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:12,324 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:12,328 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:12,333 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:12,363 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$1b619760] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:12,617 INFO [main][DruidDataSourceAutoConfigure.java:56] - Init DruidDataSource
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:13,252 INFO [main][DruidDataSource.java:1002] - {dataSource-1} inited
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:14,512 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:14,513 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:14,582 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:14,582 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:15,991 INFO [main][ExecutorConfigurationSupport.java:171] - Initializing ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:16,991 INFO [main][ExecutorConfigurationSupport.java:171] - Initializing ExecutorService
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:17,075 INFO [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.RegistryConfig#0] have been binding by prefix of configuration properties : dubbo.registry
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:17,081 INFO [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.ProtocolConfig#0] have been binding by prefix of configuration properties : dubbo.protocol
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:17,170 INFO [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.ConsumerConfig#0] have been binding by prefix of configuration properties : dubbo.consumer
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:20,122 INFO [main][EndpointLinksResolver.java:59] - Exposing 4 endpoint(s) beneath base path '/actuator'
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:20,622 INFO [main][DubboServiceMetadataRepository.java:262] - The metadata of Dubbo services has been initialized
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:20,677 INFO [main][ServiceBean.java:112] -  [DUBBO] The service ready on spring started. service: com.shanjupay.transaction.api.PayChannelService, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:20,684 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:0) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:20,703 WARN [main][AbstractInterfaceConfig.java:265] -  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:20,849 INFO [main][ServiceConfig.java:643] -  [DUBBO] Export dubbo service com.shanjupay.transaction.api.PayChannelService to local registry url : injvm://127.0.0.1/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=1328&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589720900710, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:20,849 INFO [main][ServiceConfig.java:581] -  [DUBBO] Export dubbo service com.shanjupay.transaction.api.PayChannelService to url dubbo://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=1328&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589720900710, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:20,850 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:20,851 INFO [main][ServiceConfig.java:595] -  [DUBBO] Register dubbo service com.shanjupay.transaction.api.PayChannelService url dubbo://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=1328&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589720900710 to registry registry://localhost:9090/org.apache.dubbo.registry.RegistryService?application=transaction-service&dubbo=2.0.2&pid=1328&qos.enable=false&qos.port=22250&registry=spring-cloud&release=2.7.3&timestamp=1589720900703, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:20,906 INFO [main][QosProtocolWrapper.java:89] -  [DUBBO] qos won't be started because it is disabled. Please check dubbo.application.qos.enable is configured either in system property, dubbo.properties or XML/spring-boot configuration., dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:21,684 INFO [main][AbstractServer.java:73] -  [DUBBO] Start NettyServer bind /0.0.0.0:20893, export /169.254.160.132:20893, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:21,686 WARN [main][SpringExtensionFactory.java:86] -  [DUBBO] No spring extension (bean) named:applicationContext, try to find an extension (bean) of type org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:21,688 WARN [main][SpringExtensionFactory.java:104] -  [DUBBO] No spring extension (bean) named:applicationContext, type:org.springframework.context.ConfigurableApplicationContext found, stop get bean., dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:21,700 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: dubbo://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=1328&register=true&release=2.7.3&side=provider&timestamp=1589720900710, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:22,313 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: provider://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=1328&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589720900710, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:22,316 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:22,317 INFO [main][ServiceConfig.java:595] -  [DUBBO] Register dubbo service com.shanjupay.transaction.api.PayChannelService url dubbo://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=1328&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589720900710 to registry registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=transaction-service&dubbo=2.0.2&pid=1328&qos.enable=false&qos.port=22250&registry=nacos&release=2.7.3&timestamp=1589720900709, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:22,323 INFO [main][AbstractRegistry.java:212] -  [DUBBO] Load registry cache file C:\Users\lige\.dubbo\dubbo-registry-transaction-service-127.0.0.1:8848.cache, data: {merchant-application/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0=dubbo://169.254.160.132:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=15904&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1589706244164&version=1.0.0}, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:22,324 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: dubbo://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=1328&register=true&release=2.7.3&side=provider&timestamp=1589720900710, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:22,426 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: provider://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=1328&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589720900710, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:22,522 WARN [main][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=1328&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589720900710, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:22,528 WARN [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=1328&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589720900710, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:22,546 INFO [main][StartupInfoLogger.java:59] - Started TestPayChannelService in 21.774 seconds (JVM running for 26.166)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:23,943 INFO [Thread-11][AwaitingNonWebApplicationListener.java:155] -  [Dubbo] Current Spring Boot Application is about to shutdown...
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:23,944 INFO [Thread-11][AbstractRegistryFactory.java:68] -  [DUBBO] Close all registries [nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=transaction-service&dubbo=2.0.2&interface=org.apache.dubbo.registry.RegistryService&pid=1328&qos.enable=false&qos.port=22250&release=2.7.3&timestamp=1589720900709], dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:23,944 INFO [Thread-11][AbstractRegistry.java:458] -  [DUBBO] Destroy registry:nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=transaction-service&dubbo=2.0.2&interface=org.apache.dubbo.registry.RegistryService&pid=1328&qos.enable=false&qos.port=22250&release=2.7.3&timestamp=1589720900709, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:23,944 INFO [Thread-11][AbstractRegistry.java:291] -  [DUBBO] Unregister: dubbo://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=1328&register=true&release=2.7.3&side=provider&timestamp=1589720900710, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:23,954 INFO [Thread-11][AbstractRegistry.java:467] -  [DUBBO] Destroy unregister url dubbo://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=1328&register=true&release=2.7.3&side=provider&timestamp=1589720900710, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:23,954 INFO [Thread-11][AbstractRegistry.java:320] -  [DUBBO] Unsubscribe: provider://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=1328&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589720900710, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:23,954 INFO [Thread-11][AbstractRegistry.java:483] -  [DUBBO] Destroy unsubscribe url provider://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=1328&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589720900710, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:23,955 INFO [Thread-11][DubboProtocol.java:616] -  [DUBBO] Close dubbo server: /169.254.160.132:20893, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:23,956 INFO [Thread-11][AbstractServer.java:153] -  [DUBBO] Close NettyServer bind /0.0.0.0:20893, export /169.254.160.132:20893, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:23,958 INFO [Thread-11][AbstractProtocol.java:79] -  [DUBBO] Unexport service: dubbo://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=1328&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589720900710, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:23,960 INFO [Thread-11][Server.java:112] -  [DUBBO] qos-server stopped., dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:23,961 INFO [Thread-11][AbstractProtocol.java:79] -  [DUBBO] Unexport service: injvm://127.0.0.1/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=1328&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589720900710, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:23,962 INFO [Thread-11][AbstractRegistry.java:291] -  [DUBBO] Unregister: dubbo://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=1328&register=true&release=2.7.3&side=provider&timestamp=1589720900710, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:23,963 INFO [Thread-11][AbstractRegistry.java:320] -  [DUBBO] Unsubscribe: provider://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=1328&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589720900710, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:23,971 INFO [Exporter-Unexport-thread-1][RegistryProtocol.java:689] -  [DUBBO] Waiting 10000ms for registry to notify all consumers before unexport. Usually, this is called when you use dubbo API, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:23,992 INFO [Thread-11][ExecutorConfigurationSupport.java:208] - Shutting down ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:23,998 INFO [Thread-11][DruidDataSource.java:1885] - {dataSource-1} closing ...
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:24,004 INFO [Thread-11][DruidDataSource.java:1955] - {dataSource-1} closed
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:24,004 INFO [Thread-11][DubboGenericServiceFactory.java:159] - The Dubbo GenericService ReferenceBeans are destroying...
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:08:24,005 INFO [Thread-11][AnnotationInjectedBeanPostProcessor.java:305] - class org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor was destroying!
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:29,639 INFO [main][AbstractTestContextBootstrapper.java:308] - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.shanjupay.transaction.TestPayChannelService], using SpringBootContextLoader
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:29,663 INFO [main][AbstractContextLoader.java:264] - Could not detect default resource locations for test class [com.shanjupay.transaction.TestPayChannelService]: no resource found for suffixes {-context.xml, Context.groovy}.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:29,665 INFO [main][AnnotationConfigContextLoaderUtils.java:83] - Could not detect default configuration classes for test class [com.shanjupay.transaction.TestPayChannelService]: TestPayChannelService does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:29,944 INFO [main][SpringBootTestContextBootstrapper.java:247] - Found @SpringBootConfiguration com.shanjupay.transaction.TransactionBootstrap for test class com.shanjupay.transaction.TestPayChannelService
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:30,330 INFO [main][AbstractTestContextBootstrapper.java:248] - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:30,357 INFO [main][AbstractTestContextBootstrapper.java:177] - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@747f281, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1169afe1, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2ca26d77, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@4808bc9b, org.springframework.test.context.support.DirtiesContextTestExecutionListener@70e38ce1, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2ca923bb, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@13df2a8c, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@1ebea008, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@72d6b3ba, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@1787f2a0, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@7de62196, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@163370c2]
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:31,384 INFO [main][:] - using logger: org.apache.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:31,389 INFO [main][WelcomeLogoApplicationListener.java:63] - 

 :: Dubbo Spring Boot (v2.7.1) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.7.3) : https://github.com/apache/incubator-dubbo
 :: Discuss group : dev@dubbo.apache.org

[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:31,396 INFO [main][OverrideDubboConfigApplicationListener.java:68] - Dubbo Config was overridden by externalized configuration {dubbo.application.name=transaction-service, dubbo.application.qos-enable=false, dubbo.application.qos.port=22250, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20893, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.shanjupay}
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:31,936 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$1b619760] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:32,250 INFO [pool-3-thread-1][AwaitingNonWebApplicationListener.java:140] -  [Dubbo] Current Spring Boot Application is await...
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:32,994 INFO [main][OverrideDubboConfigApplicationListener.java:68] - Dubbo Config was overridden by externalized configuration {dubbo.application.name=transaction-service, dubbo.application.qos-enable=false, dubbo.application.qos.port=22250, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20893, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.shanjupay}
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:33,480 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'spring-boot-http.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:33,492 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'spring-boot-starter-druid.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:33,504 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'spring-boot-mybatis-plus.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:33,518 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'transaction-service.yaml', group: 'SHANJUPAY_GROUP'
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:33,522 INFO [main][PropertySourceBootstrapConfiguration.java:98] - Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource {name='transaction-service.yaml'}, NacosPropertySource {name='spring-boot-mybatis-plus.yaml'}, NacosPropertySource {name='spring-boot-starter-druid.yaml'}, NacosPropertySource {name='spring-boot-http.yaml'}]}
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:33,565 INFO [main][SpringApplication.java:675] - No active profile set, falling back to default profiles: default
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:34,511 WARN [main][EndpointId.java:135] - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:34,514 WARN [main][EndpointId.java:135] - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:34,556 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ApplicationConfig#0, class : org.apache.dubbo.config.ApplicationConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:34,557 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ApplicationConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:34,558 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.RegistryConfig#0, class : org.apache.dubbo.config.RegistryConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:34,558 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.RegistryConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:34,559 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ProtocolConfig#0, class : org.apache.dubbo.config.ProtocolConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:34,559 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ProtocolConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:34,561 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ConsumerConfig#0, class : org.apache.dubbo.config.ConsumerConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:34,562 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ConsumerConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:34,802 INFO [main][RepositoryConfigurationDelegate.java:244] - Multiple Spring Data modules found, entering strict repository configuration mode!
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:34,815 INFO [main][RepositoryConfigurationDelegate.java:126] - Bootstrapping Spring Data repositories in DEFAULT mode.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:34,868 INFO [main][RepositoryConfigurationDelegate.java:182] - Finished Spring Data repository scanning in 23ms. Found 0 repository interfaces.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:34,988 WARN [main][EndpointId.java:135] - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:35,104 INFO [main][ServiceAnnotationBeanPostProcessor.java:204] -  [DUBBO] BeanNameGenerator bean can't be found in BeanFactory with name [org.springframework.context.annotation.internalConfigurationBeanNameGenerator], dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:35,104 INFO [main][ServiceAnnotationBeanPostProcessor.java:206] -  [DUBBO] BeanNameGenerator will be a instance of org.springframework.context.annotation.AnnotationBeanNameGenerator , it maybe a potential problem on bean name generation., dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:35,144 INFO [main][ServiceAnnotationBeanPostProcessor.java:284] -  [DUBBO] The BeanDefinition[Root bean: class [org.apache.dubbo.config.spring.ServiceBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] of ServiceBean has been registered with name : ServiceBean:com.shanjupay.transaction.api.PayChannelService, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:35,144 INFO [main][ServiceAnnotationBeanPostProcessor.java:161] -  [DUBBO] 1 annotated Dubbo's @Service Components { [Bean definition with name 'payChannelServiceImpl': Generic bean: class [com.shanjupay.transaction.service.PayChannelServiceImpl]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\shanjupay\shanjupay-transaction\shanjupay-transaction-service\target\classes\com\shanjupay\transaction\service\PayChannelServiceImpl.class]] } were scanned under package[com.shanjupay], dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:35,148 INFO [main][ConfigurationClassPostProcessor.java:380] - Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboRelaxedBinding2AutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:35,148 INFO [main][ConfigurationClassPostProcessor.java:380] - Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:35,452 INFO [main][GenericScope.java:294] - BeanFactory id=61cd5608-3555-3dd5-ac76-8adf07fc4aac
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:35,594 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:35,744 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ff479463] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:35,892 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties' of type [com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:35,904 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'advisor' of type [org.springframework.aop.support.RegexpMethodPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:35,908 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration$$EnhancerBySpringCGLIB$$8308e367] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:35,925 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubbo.cloud-com.alibaba.cloud.dubbo.env.DubboCloudProperties' of type [com.alibaba.cloud.dubbo.env.DubboCloudProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:35,948 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'metadataJsonResolver' of type [com.alibaba.cloud.dubbo.metadata.resolver.DubboServiceBeanMetadataResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:35,969 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.apache.dubbo.config.ApplicationConfig#0' of type [org.apache.dubbo.config.ApplicationConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:35,980 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboProtocolConfigSupplier' of type [com.alibaba.cloud.dubbo.metadata.DubboProtocolConfigSupplier] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:35,990 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:35,993 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration$$EnhancerBySpringCGLIB$$f5487fe1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:36,006 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration$$EnhancerBySpringCGLIB$$87f28839] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:36,017 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboGenericServiceFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:36,022 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboMetadataConfigServiceProxy' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceProxy] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:36,029 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$4837c1f3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:36,040 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$3c02cab8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:36,055 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.commons.util.UtilAutoConfiguration' of type [org.springframework.cloud.commons.util.UtilAutoConfiguration$$EnhancerBySpringCGLIB$$c6f55de7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:36,065 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'inetUtilsProperties' of type [org.springframework.cloud.commons.util.InetUtilsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:36,068 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'inetUtils' of type [org.springframework.cloud.commons.util.InetUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:36,666 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'nacosProperties' of type [com.alibaba.cloud.nacos.NacosDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:36,672 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'nacosDiscoveryClient' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:36,695 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties' of type [org.springframework.boot.autoconfigure.web.ServerProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:36,699 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$14665ac1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:37,284 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'simpleDiscoveryProperties' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:37,288 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'simpleDiscoveryClient' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:37,293 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'compositeDiscoveryClient' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:37,298 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.util.JSONUtils' of type [com.alibaba.cloud.dubbo.util.JSONUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:37,398 WARN [main][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:0) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:37,399 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository' of type [com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:37,448 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:37,471 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties' of type [org.springframework.boot.autoconfigure.http.HttpProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:37,479 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$4c892697] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:37,492 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'stringHttpMessageConverter' of type [org.springframework.http.converter.StringHttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:37,509 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$865f2297] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:37,520 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$5adb13f4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:37,534 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$d27d60d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:37,546 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$c83ebbfc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:37,559 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:37,568 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:37,587 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$ef0a332a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:37,613 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:37,619 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$3ce6b183] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:37,632 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:37,635 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:37,644 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:37,650 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:37,681 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:37,697 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'mappingJackson2HttpMessageConverter' of type [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:37,707 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$$EnhancerBySpringCGLIB$$197b5ff7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:37,728 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'messageConverters' of type [org.springframework.boot.autoconfigure.http.HttpMessageConverters] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:37,732 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:37,745 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:37,763 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:37,765 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:37,816 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:37,831 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:37,837 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:37,843 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:37,873 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$1b619760] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:38,136 INFO [main][DruidDataSourceAutoConfigure.java:56] - Init DruidDataSource
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:38,675 INFO [main][DruidDataSource.java:1002] - {dataSource-1} inited
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:39,759 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:39,760 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:39,768 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:39,768 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:40,530 INFO [main][ExecutorConfigurationSupport.java:171] - Initializing ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:41,944 INFO [main][ExecutorConfigurationSupport.java:171] - Initializing ExecutorService
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:42,027 INFO [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.RegistryConfig#0] have been binding by prefix of configuration properties : dubbo.registry
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:42,034 INFO [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.ProtocolConfig#0] have been binding by prefix of configuration properties : dubbo.protocol
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:42,047 INFO [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.ConsumerConfig#0] have been binding by prefix of configuration properties : dubbo.consumer
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:43,967 INFO [main][EndpointLinksResolver.java:59] - Exposing 4 endpoint(s) beneath base path '/actuator'
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:44,309 INFO [main][DubboServiceMetadataRepository.java:262] - The metadata of Dubbo services has been initialized
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:44,407 INFO [main][ServiceBean.java:112] -  [DUBBO] The service ready on spring started. service: com.shanjupay.transaction.api.PayChannelService, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:44,414 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:0) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:44,505 WARN [main][AbstractInterfaceConfig.java:265] -  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:44,783 INFO [main][ServiceConfig.java:643] -  [DUBBO] Export dubbo service com.shanjupay.transaction.api.PayChannelService to local registry url : injvm://127.0.0.1/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=3040&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721044525, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:44,783 INFO [main][ServiceConfig.java:581] -  [DUBBO] Export dubbo service com.shanjupay.transaction.api.PayChannelService to url dubbo://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=3040&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721044525, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:44,785 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:44,785 INFO [main][ServiceConfig.java:595] -  [DUBBO] Register dubbo service com.shanjupay.transaction.api.PayChannelService url dubbo://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=3040&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721044525 to registry registry://localhost:9090/org.apache.dubbo.registry.RegistryService?application=transaction-service&dubbo=2.0.2&pid=3040&qos.enable=false&qos.port=22250&registry=spring-cloud&release=2.7.3&timestamp=1589721044506, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:44,826 INFO [main][QosProtocolWrapper.java:89] -  [DUBBO] qos won't be started because it is disabled. Please check dubbo.application.qos.enable is configured either in system property, dubbo.properties or XML/spring-boot configuration., dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:45,643 INFO [main][AbstractServer.java:73] -  [DUBBO] Start NettyServer bind /0.0.0.0:20893, export /169.254.160.132:20893, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:45,644 WARN [main][SpringExtensionFactory.java:86] -  [DUBBO] No spring extension (bean) named:applicationContext, try to find an extension (bean) of type org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:45,646 WARN [main][SpringExtensionFactory.java:104] -  [DUBBO] No spring extension (bean) named:applicationContext, type:org.springframework.context.ConfigurableApplicationContext found, stop get bean., dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:45,657 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: dubbo://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=3040&register=true&release=2.7.3&side=provider&timestamp=1589721044525, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:46,342 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: provider://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=3040&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721044525, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:46,344 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:46,345 INFO [main][ServiceConfig.java:595] -  [DUBBO] Register dubbo service com.shanjupay.transaction.api.PayChannelService url dubbo://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=3040&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721044525 to registry registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=transaction-service&dubbo=2.0.2&pid=3040&qos.enable=false&qos.port=22250&registry=nacos&release=2.7.3&timestamp=1589721044523, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:46,350 INFO [main][AbstractRegistry.java:212] -  [DUBBO] Load registry cache file C:\Users\lige\.dubbo\dubbo-registry-transaction-service-127.0.0.1:8848.cache, data: {merchant-application/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0=dubbo://169.254.160.132:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=15904&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1589706244164&version=1.0.0}, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:46,351 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: dubbo://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=3040&register=true&release=2.7.3&side=provider&timestamp=1589721044525, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:46,369 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: provider://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=3040&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721044525, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:46,408 WARN [main][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=3040&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721044525, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:46,412 WARN [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=3040&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721044525, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:46,418 INFO [main][StartupInfoLogger.java:59] - Started TestPayChannelService in 15.962 seconds (JVM running for 18.177)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:47,020 INFO [Thread-11][AwaitingNonWebApplicationListener.java:155] -  [Dubbo] Current Spring Boot Application is about to shutdown...
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:47,020 INFO [Thread-11][AbstractRegistryFactory.java:68] -  [DUBBO] Close all registries [nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=transaction-service&dubbo=2.0.2&interface=org.apache.dubbo.registry.RegistryService&pid=3040&qos.enable=false&qos.port=22250&release=2.7.3&timestamp=1589721044523], dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:47,021 INFO [Thread-11][AbstractRegistry.java:458] -  [DUBBO] Destroy registry:nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=transaction-service&dubbo=2.0.2&interface=org.apache.dubbo.registry.RegistryService&pid=3040&qos.enable=false&qos.port=22250&release=2.7.3&timestamp=1589721044523, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:47,021 INFO [Thread-11][AbstractRegistry.java:291] -  [DUBBO] Unregister: dubbo://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=3040&register=true&release=2.7.3&side=provider&timestamp=1589721044525, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:47,027 INFO [Thread-11][AbstractRegistry.java:467] -  [DUBBO] Destroy unregister url dubbo://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=3040&register=true&release=2.7.3&side=provider&timestamp=1589721044525, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:47,028 INFO [Thread-11][AbstractRegistry.java:320] -  [DUBBO] Unsubscribe: provider://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=3040&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721044525, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:47,028 INFO [Thread-11][AbstractRegistry.java:483] -  [DUBBO] Destroy unsubscribe url provider://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=3040&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721044525, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:47,028 INFO [Thread-11][DubboProtocol.java:616] -  [DUBBO] Close dubbo server: /169.254.160.132:20893, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:47,029 INFO [Thread-11][AbstractServer.java:153] -  [DUBBO] Close NettyServer bind /0.0.0.0:20893, export /169.254.160.132:20893, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:47,031 INFO [Thread-11][AbstractProtocol.java:79] -  [DUBBO] Unexport service: dubbo://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=3040&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721044525, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:47,034 INFO [Thread-11][Server.java:112] -  [DUBBO] qos-server stopped., dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:47,034 INFO [Thread-11][AbstractProtocol.java:79] -  [DUBBO] Unexport service: injvm://127.0.0.1/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=3040&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721044525, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:47,035 INFO [Thread-11][AbstractRegistry.java:291] -  [DUBBO] Unregister: dubbo://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=3040&register=true&release=2.7.3&side=provider&timestamp=1589721044525, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:47,036 INFO [Thread-11][AbstractRegistry.java:320] -  [DUBBO] Unsubscribe: provider://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=3040&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721044525, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:47,041 INFO [Exporter-Unexport-thread-1][RegistryProtocol.java:689] -  [DUBBO] Waiting 10000ms for registry to notify all consumers before unexport. Usually, this is called when you use dubbo API, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:47,054 INFO [Thread-11][ExecutorConfigurationSupport.java:208] - Shutting down ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:47,058 INFO [Thread-11][DruidDataSource.java:1885] - {dataSource-1} closing ...
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:47,066 INFO [Thread-11][DruidDataSource.java:1955] - {dataSource-1} closed
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:47,069 INFO [Thread-11][DubboGenericServiceFactory.java:159] - The Dubbo GenericService ReferenceBeans are destroying...
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:10:47,069 INFO [Thread-11][AnnotationInjectedBeanPostProcessor.java:305] - class org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor was destroying!
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:02,807 INFO [main][AbstractTestContextBootstrapper.java:308] - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.shanjupay.transaction.TestPayChannelService], using SpringBootContextLoader
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:02,823 INFO [main][AbstractContextLoader.java:264] - Could not detect default resource locations for test class [com.shanjupay.transaction.TestPayChannelService]: no resource found for suffixes {-context.xml, Context.groovy}.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:02,824 INFO [main][AnnotationConfigContextLoaderUtils.java:83] - Could not detect default configuration classes for test class [com.shanjupay.transaction.TestPayChannelService]: TestPayChannelService does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:03,035 INFO [main][SpringBootTestContextBootstrapper.java:247] - Found @SpringBootConfiguration com.shanjupay.transaction.TransactionBootstrap for test class com.shanjupay.transaction.TestPayChannelService
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:03,305 INFO [main][AbstractTestContextBootstrapper.java:248] - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:03,332 INFO [main][AbstractTestContextBootstrapper.java:177] - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@35b74c5c, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@2e570ded, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@b86de0d, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@81d9a72, org.springframework.test.context.support.DirtiesContextTestExecutionListener@747f281, org.springframework.test.context.transaction.TransactionalTestExecutionListener@1169afe1, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2ca26d77, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@4808bc9b, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@70e38ce1, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@2ca923bb, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@13df2a8c, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@1ebea008]
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:04,598 INFO [main][:] - using logger: org.apache.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:04,604 INFO [main][WelcomeLogoApplicationListener.java:63] - 

 :: Dubbo Spring Boot (v2.7.1) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.7.3) : https://github.com/apache/incubator-dubbo
 :: Discuss group : dev@dubbo.apache.org

[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:04,613 INFO [main][OverrideDubboConfigApplicationListener.java:68] - Dubbo Config was overridden by externalized configuration {dubbo.application.name=transaction-service, dubbo.application.qos-enable=false, dubbo.application.qos.port=22250, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20893, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.shanjupay}
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:05,159 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$c84a6f57] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:05,919 INFO [main][OverrideDubboConfigApplicationListener.java:68] - Dubbo Config was overridden by externalized configuration {dubbo.application.name=transaction-service, dubbo.application.qos-enable=false, dubbo.application.qos.port=22250, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20893, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.shanjupay}
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:06,432 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'spring-boot-http.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:06,443 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'spring-boot-starter-druid.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:06,453 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'spring-boot-mybatis-plus.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:06,461 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'transaction-service.yaml', group: 'SHANJUPAY_GROUP'
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:06,463 INFO [main][PropertySourceBootstrapConfiguration.java:98] - Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource {name='transaction-service.yaml'}, NacosPropertySource {name='spring-boot-mybatis-plus.yaml'}, NacosPropertySource {name='spring-boot-starter-druid.yaml'}, NacosPropertySource {name='spring-boot-http.yaml'}]}
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:06,497 INFO [main][SpringApplication.java:675] - No active profile set, falling back to default profiles: default
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:07,456 WARN [main][EndpointId.java:135] - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:07,459 WARN [main][EndpointId.java:135] - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:07,497 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ApplicationConfig#0, class : org.apache.dubbo.config.ApplicationConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:07,498 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ApplicationConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:07,499 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.RegistryConfig#0, class : org.apache.dubbo.config.RegistryConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:07,500 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.RegistryConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:07,500 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ProtocolConfig#0, class : org.apache.dubbo.config.ProtocolConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:07,500 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ProtocolConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:07,501 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ConsumerConfig#0, class : org.apache.dubbo.config.ConsumerConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:07,501 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ConsumerConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:07,806 INFO [main][RepositoryConfigurationDelegate.java:244] - Multiple Spring Data modules found, entering strict repository configuration mode!
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:07,811 INFO [main][RepositoryConfigurationDelegate.java:126] - Bootstrapping Spring Data repositories in DEFAULT mode.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:07,862 INFO [main][RepositoryConfigurationDelegate.java:182] - Finished Spring Data repository scanning in 28ms. Found 0 repository interfaces.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:07,997 WARN [main][EndpointId.java:135] - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:08,157 INFO [main][ServiceAnnotationBeanPostProcessor.java:204] -  [DUBBO] BeanNameGenerator bean can't be found in BeanFactory with name [org.springframework.context.annotation.internalConfigurationBeanNameGenerator], dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:08,158 INFO [main][ServiceAnnotationBeanPostProcessor.java:206] -  [DUBBO] BeanNameGenerator will be a instance of org.springframework.context.annotation.AnnotationBeanNameGenerator , it maybe a potential problem on bean name generation., dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:08,198 INFO [main][ServiceAnnotationBeanPostProcessor.java:284] -  [DUBBO] The BeanDefinition[Root bean: class [org.apache.dubbo.config.spring.ServiceBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] of ServiceBean has been registered with name : ServiceBean:com.shanjupay.transaction.api.PayChannelService, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:08,198 INFO [main][ServiceAnnotationBeanPostProcessor.java:161] -  [DUBBO] 1 annotated Dubbo's @Service Components { [Bean definition with name 'payChannelServiceImpl': Generic bean: class [com.shanjupay.transaction.service.PayChannelServiceImpl]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\shanjupay\shanjupay-transaction\shanjupay-transaction-service\target\classes\com\shanjupay\transaction\service\PayChannelServiceImpl.class]] } were scanned under package[com.shanjupay], dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:08,203 INFO [main][ConfigurationClassPostProcessor.java:380] - Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboRelaxedBinding2AutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:08,203 INFO [main][ConfigurationClassPostProcessor.java:380] - Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:08,450 INFO [main][GenericScope.java:294] - BeanFactory id=61cd5608-3555-3dd5-ac76-8adf07fc4aac
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:08,553 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:08,726 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ac306c5a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:08,873 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties' of type [com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:08,887 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'advisor' of type [org.springframework.aop.support.RegexpMethodPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:08,892 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration$$EnhancerBySpringCGLIB$$2ff1bb5e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:08,910 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubbo.cloud-com.alibaba.cloud.dubbo.env.DubboCloudProperties' of type [com.alibaba.cloud.dubbo.env.DubboCloudProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:08,929 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'metadataJsonResolver' of type [com.alibaba.cloud.dubbo.metadata.resolver.DubboServiceBeanMetadataResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:08,960 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.apache.dubbo.config.ApplicationConfig#0' of type [org.apache.dubbo.config.ApplicationConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:08,971 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboProtocolConfigSupplier' of type [com.alibaba.cloud.dubbo.metadata.DubboProtocolConfigSupplier] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:08,975 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:08,977 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration$$EnhancerBySpringCGLIB$$a23157d8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:08,986 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration$$EnhancerBySpringCGLIB$$34db6030] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:08,994 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboGenericServiceFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:09,002 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboMetadataConfigServiceProxy' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceProxy] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:09,011 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$f52099ea] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:09,020 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$e8eba2af] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:09,037 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.commons.util.UtilAutoConfiguration' of type [org.springframework.cloud.commons.util.UtilAutoConfiguration$$EnhancerBySpringCGLIB$$73de35de] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:09,047 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'inetUtilsProperties' of type [org.springframework.cloud.commons.util.InetUtilsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:09,051 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'inetUtils' of type [org.springframework.cloud.commons.util.InetUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:09,652 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'nacosProperties' of type [com.alibaba.cloud.nacos.NacosDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:09,659 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'nacosDiscoveryClient' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:09,680 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties' of type [org.springframework.boot.autoconfigure.web.ServerProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:09,686 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$c14f32b8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:10,280 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'simpleDiscoveryProperties' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:10,284 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'simpleDiscoveryClient' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:10,289 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'compositeDiscoveryClient' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:10,293 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.util.JSONUtils' of type [com.alibaba.cloud.dubbo.util.JSONUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:10,397 WARN [main][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:0) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:10,398 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository' of type [com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:10,440 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:10,470 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties' of type [org.springframework.boot.autoconfigure.http.HttpProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:10,479 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$f971fe8e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:10,493 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'stringHttpMessageConverter' of type [org.springframework.http.converter.StringHttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:10,507 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$3347fa8e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:10,522 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$7c3ebeb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:10,538 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$ba10ae04] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:10,554 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$752793f3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:10,570 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:10,582 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:10,600 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$9bf30b21] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:10,616 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:10,621 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$e9cf897a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:10,632 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:10,636 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:10,644 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:10,649 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:10,677 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:10,691 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'mappingJackson2HttpMessageConverter' of type [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:10,697 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$$EnhancerBySpringCGLIB$$c66437ee] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:10,711 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'messageConverters' of type [org.springframework.boot.autoconfigure.http.HttpMessageConverters] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:10,718 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:10,726 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:10,737 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:10,738 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:10,763 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:10,787 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:10,792 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:10,800 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:10,834 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$c84a6f57] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:11,066 INFO [main][DruidDataSourceAutoConfigure.java:56] - Init DruidDataSource
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:11,551 INFO [main][DruidDataSource.java:1002] - {dataSource-1} inited
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:12,491 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:12,492 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:12,500 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:12,501 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:13,194 INFO [main][ExecutorConfigurationSupport.java:171] - Initializing ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:14,047 INFO [main][ExecutorConfigurationSupport.java:171] - Initializing ExecutorService
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:14,131 INFO [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.RegistryConfig#0] have been binding by prefix of configuration properties : dubbo.registry
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:14,138 INFO [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.ProtocolConfig#0] have been binding by prefix of configuration properties : dubbo.protocol
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:14,151 INFO [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.ConsumerConfig#0] have been binding by prefix of configuration properties : dubbo.consumer
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:15,956 INFO [main][EndpointLinksResolver.java:59] - Exposing 4 endpoint(s) beneath base path '/actuator'
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:16,282 INFO [main][DubboServiceMetadataRepository.java:262] - The metadata of Dubbo services has been initialized
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:16,321 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:0) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:16,328 INFO [main][ServiceBean.java:112] -  [DUBBO] The service ready on spring started. service: com.shanjupay.transaction.api.PayChannelService, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:16,350 WARN [main][AbstractInterfaceConfig.java:265] -  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:16,458 INFO [main][ServiceConfig.java:643] -  [DUBBO] Export dubbo service com.shanjupay.transaction.api.PayChannelService to local registry url : injvm://127.0.0.1/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=640&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721136357, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:16,458 INFO [main][ServiceConfig.java:581] -  [DUBBO] Export dubbo service com.shanjupay.transaction.api.PayChannelService to url dubbo://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=640&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721136357, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:16,459 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:16,459 INFO [main][ServiceConfig.java:595] -  [DUBBO] Register dubbo service com.shanjupay.transaction.api.PayChannelService url dubbo://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=640&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721136357 to registry registry://localhost:9090/org.apache.dubbo.registry.RegistryService?application=transaction-service&dubbo=2.0.2&pid=640&qos.enable=false&qos.port=22250&registry=spring-cloud&release=2.7.3&timestamp=1589721136350, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:16,494 INFO [main][QosProtocolWrapper.java:89] -  [DUBBO] qos won't be started because it is disabled. Please check dubbo.application.qos.enable is configured either in system property, dubbo.properties or XML/spring-boot configuration., dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:17,285 INFO [main][AbstractServer.java:73] -  [DUBBO] Start NettyServer bind /0.0.0.0:20893, export /169.254.160.132:20893, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:17,287 WARN [main][SpringExtensionFactory.java:86] -  [DUBBO] No spring extension (bean) named:applicationContext, try to find an extension (bean) of type org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:17,288 WARN [main][SpringExtensionFactory.java:104] -  [DUBBO] No spring extension (bean) named:applicationContext, type:org.springframework.context.ConfigurableApplicationContext found, stop get bean., dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:17,299 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: dubbo://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=640&register=true&release=2.7.3&side=provider&timestamp=1589721136357, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:17,876 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: provider://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=640&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721136357, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:17,879 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:17,879 INFO [main][ServiceConfig.java:595] -  [DUBBO] Register dubbo service com.shanjupay.transaction.api.PayChannelService url dubbo://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=640&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721136357 to registry registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=transaction-service&dubbo=2.0.2&pid=640&qos.enable=false&qos.port=22250&registry=nacos&release=2.7.3&timestamp=1589721136356, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:17,884 INFO [main][AbstractRegistry.java:212] -  [DUBBO] Load registry cache file C:\Users\lige\.dubbo\dubbo-registry-transaction-service-127.0.0.1:8848.cache, data: {merchant-application/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0=dubbo://169.254.160.132:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=15904&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1589706244164&version=1.0.0}, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:17,885 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: dubbo://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=640&register=true&release=2.7.3&side=provider&timestamp=1589721136357, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:17,904 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: provider://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=640&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721136357, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:17,947 WARN [main][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=640&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721136357, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:17,951 WARN [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=640&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721136357, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:17,958 INFO [main][StartupInfoLogger.java:59] - Started TestPayChannelService in 14.493 seconds (JVM running for 16.426)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:18,494 INFO [Thread-11][AwaitingNonWebApplicationListener.java:155] -  [Dubbo] Current Spring Boot Application is about to shutdown...
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:18,496 INFO [Thread-11][AbstractRegistryFactory.java:68] -  [DUBBO] Close all registries [nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=transaction-service&dubbo=2.0.2&interface=org.apache.dubbo.registry.RegistryService&pid=640&qos.enable=false&qos.port=22250&release=2.7.3&timestamp=1589721136356], dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:18,498 INFO [Thread-11][AbstractRegistry.java:458] -  [DUBBO] Destroy registry:nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=transaction-service&dubbo=2.0.2&interface=org.apache.dubbo.registry.RegistryService&pid=640&qos.enable=false&qos.port=22250&release=2.7.3&timestamp=1589721136356, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:18,498 INFO [Thread-11][AbstractRegistry.java:291] -  [DUBBO] Unregister: dubbo://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=640&register=true&release=2.7.3&side=provider&timestamp=1589721136357, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:18,538 INFO [Thread-11][AbstractRegistry.java:467] -  [DUBBO] Destroy unregister url dubbo://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=640&register=true&release=2.7.3&side=provider&timestamp=1589721136357, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:18,538 INFO [Thread-11][AbstractRegistry.java:320] -  [DUBBO] Unsubscribe: provider://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=640&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721136357, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:18,538 INFO [Thread-11][AbstractRegistry.java:483] -  [DUBBO] Destroy unsubscribe url provider://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=640&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721136357, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:18,539 INFO [Thread-11][DubboProtocol.java:616] -  [DUBBO] Close dubbo server: /169.254.160.132:20893, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:18,540 INFO [Thread-11][AbstractServer.java:153] -  [DUBBO] Close NettyServer bind /0.0.0.0:20893, export /169.254.160.132:20893, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:18,542 INFO [Thread-11][AbstractProtocol.java:79] -  [DUBBO] Unexport service: dubbo://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=640&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721136357, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:18,545 INFO [Thread-11][Server.java:112] -  [DUBBO] qos-server stopped., dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:18,546 INFO [Thread-11][AbstractProtocol.java:79] -  [DUBBO] Unexport service: injvm://127.0.0.1/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=640&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721136357, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:18,547 INFO [Thread-11][AbstractRegistry.java:291] -  [DUBBO] Unregister: dubbo://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=640&register=true&release=2.7.3&side=provider&timestamp=1589721136357, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:18,548 INFO [Thread-11][AbstractRegistry.java:320] -  [DUBBO] Unsubscribe: provider://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=640&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721136357, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:18,551 INFO [Exporter-Unexport-thread-1][RegistryProtocol.java:689] -  [DUBBO] Waiting 10000ms for registry to notify all consumers before unexport. Usually, this is called when you use dubbo API, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:18,563 INFO [Thread-11][ExecutorConfigurationSupport.java:208] - Shutting down ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:18,569 INFO [Thread-11][DruidDataSource.java:1885] - {dataSource-1} closing ...
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:18,575 INFO [Thread-11][DruidDataSource.java:1955] - {dataSource-1} closed
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:18,575 INFO [Thread-11][DubboGenericServiceFactory.java:159] - The Dubbo GenericService ReferenceBeans are destroying...
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:18,577 INFO [Thread-11][AnnotationInjectedBeanPostProcessor.java:305] - class org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor was destroying!
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:42,233 INFO [main][AbstractTestContextBootstrapper.java:308] - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.shanjupay.transaction.TestPayChannelService], using SpringBootContextLoader
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:42,253 INFO [main][AbstractContextLoader.java:264] - Could not detect default resource locations for test class [com.shanjupay.transaction.TestPayChannelService]: no resource found for suffixes {-context.xml, Context.groovy}.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:42,255 INFO [main][AnnotationConfigContextLoaderUtils.java:83] - Could not detect default configuration classes for test class [com.shanjupay.transaction.TestPayChannelService]: TestPayChannelService does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:42,533 INFO [main][SpringBootTestContextBootstrapper.java:247] - Found @SpringBootConfiguration com.shanjupay.transaction.TransactionBootstrap for test class com.shanjupay.transaction.TestPayChannelService
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:42,694 INFO [main][AbstractTestContextBootstrapper.java:248] - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:42,721 INFO [main][AbstractTestContextBootstrapper.java:177] - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@35b74c5c, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@2e570ded, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@b86de0d, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@81d9a72, org.springframework.test.context.support.DirtiesContextTestExecutionListener@747f281, org.springframework.test.context.transaction.TransactionalTestExecutionListener@1169afe1, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2ca26d77, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@4808bc9b, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@70e38ce1, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@2ca923bb, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@13df2a8c, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@1ebea008]
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:43,724 INFO [main][:] - using logger: org.apache.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:43,728 INFO [main][WelcomeLogoApplicationListener.java:63] - 

 :: Dubbo Spring Boot (v2.7.1) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.7.3) : https://github.com/apache/incubator-dubbo
 :: Discuss group : dev@dubbo.apache.org

[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:43,736 INFO [main][OverrideDubboConfigApplicationListener.java:68] - Dubbo Config was overridden by externalized configuration {dubbo.application.name=transaction-service, dubbo.application.qos-enable=false, dubbo.application.qos.port=22250, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20893, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.shanjupay}
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:44,258 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$c84a6f57] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:44,341 INFO [pool-3-thread-1][AwaitingNonWebApplicationListener.java:140] -  [Dubbo] Current Spring Boot Application is await...
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:44,947 INFO [main][OverrideDubboConfigApplicationListener.java:68] - Dubbo Config was overridden by externalized configuration {dubbo.application.name=transaction-service, dubbo.application.qos-enable=false, dubbo.application.qos.port=22250, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20893, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.shanjupay}
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:45,428 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'spring-boot-http.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:45,439 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'spring-boot-starter-druid.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:45,448 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'spring-boot-mybatis-plus.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:45,457 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'transaction-service.yaml', group: 'SHANJUPAY_GROUP'
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:45,459 INFO [main][PropertySourceBootstrapConfiguration.java:98] - Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource {name='transaction-service.yaml'}, NacosPropertySource {name='spring-boot-mybatis-plus.yaml'}, NacosPropertySource {name='spring-boot-starter-druid.yaml'}, NacosPropertySource {name='spring-boot-http.yaml'}]}
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:45,494 INFO [main][SpringApplication.java:675] - No active profile set, falling back to default profiles: default
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:46,728 WARN [main][EndpointId.java:135] - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:46,733 WARN [main][EndpointId.java:135] - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:46,777 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ApplicationConfig#0, class : org.apache.dubbo.config.ApplicationConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:46,778 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ApplicationConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:46,778 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.RegistryConfig#0, class : org.apache.dubbo.config.RegistryConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:46,779 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.RegistryConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:46,779 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ProtocolConfig#0, class : org.apache.dubbo.config.ProtocolConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:46,779 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ProtocolConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:46,780 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ConsumerConfig#0, class : org.apache.dubbo.config.ConsumerConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:46,780 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ConsumerConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:47,055 INFO [main][RepositoryConfigurationDelegate.java:244] - Multiple Spring Data modules found, entering strict repository configuration mode!
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:47,060 INFO [main][RepositoryConfigurationDelegate.java:126] - Bootstrapping Spring Data repositories in DEFAULT mode.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:47,168 INFO [main][RepositoryConfigurationDelegate.java:182] - Finished Spring Data repository scanning in 33ms. Found 0 repository interfaces.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:47,304 WARN [main][EndpointId.java:135] - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:47,420 INFO [main][ServiceAnnotationBeanPostProcessor.java:204] -  [DUBBO] BeanNameGenerator bean can't be found in BeanFactory with name [org.springframework.context.annotation.internalConfigurationBeanNameGenerator], dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:47,420 INFO [main][ServiceAnnotationBeanPostProcessor.java:206] -  [DUBBO] BeanNameGenerator will be a instance of org.springframework.context.annotation.AnnotationBeanNameGenerator , it maybe a potential problem on bean name generation., dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:47,452 INFO [main][ServiceAnnotationBeanPostProcessor.java:284] -  [DUBBO] The BeanDefinition[Root bean: class [org.apache.dubbo.config.spring.ServiceBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] of ServiceBean has been registered with name : ServiceBean:com.shanjupay.transaction.api.PayChannelService, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:47,453 INFO [main][ServiceAnnotationBeanPostProcessor.java:161] -  [DUBBO] 1 annotated Dubbo's @Service Components { [Bean definition with name 'payChannelServiceImpl': Generic bean: class [com.shanjupay.transaction.service.PayChannelServiceImpl]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\shanjupay\shanjupay-transaction\shanjupay-transaction-service\target\classes\com\shanjupay\transaction\service\PayChannelServiceImpl.class]] } were scanned under package[com.shanjupay], dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:47,456 INFO [main][ConfigurationClassPostProcessor.java:380] - Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboRelaxedBinding2AutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:47,456 INFO [main][ConfigurationClassPostProcessor.java:380] - Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:47,686 INFO [main][GenericScope.java:294] - BeanFactory id=61cd5608-3555-3dd5-ac76-8adf07fc4aac
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:47,779 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:47,950 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ac306c5a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:48,119 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties' of type [com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:48,135 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'advisor' of type [org.springframework.aop.support.RegexpMethodPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:48,161 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration$$EnhancerBySpringCGLIB$$2ff1bb5e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:48,196 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubbo.cloud-com.alibaba.cloud.dubbo.env.DubboCloudProperties' of type [com.alibaba.cloud.dubbo.env.DubboCloudProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:48,262 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'metadataJsonResolver' of type [com.alibaba.cloud.dubbo.metadata.resolver.DubboServiceBeanMetadataResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:48,284 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.apache.dubbo.config.ApplicationConfig#0' of type [org.apache.dubbo.config.ApplicationConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:48,296 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboProtocolConfigSupplier' of type [com.alibaba.cloud.dubbo.metadata.DubboProtocolConfigSupplier] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:48,298 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:48,299 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration$$EnhancerBySpringCGLIB$$a23157d8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:48,306 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration$$EnhancerBySpringCGLIB$$34db6030] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:48,315 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboGenericServiceFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:48,332 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboMetadataConfigServiceProxy' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceProxy] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:48,339 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$f52099ea] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:48,345 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$e8eba2af] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:48,359 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.commons.util.UtilAutoConfiguration' of type [org.springframework.cloud.commons.util.UtilAutoConfiguration$$EnhancerBySpringCGLIB$$73de35de] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:48,373 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'inetUtilsProperties' of type [org.springframework.cloud.commons.util.InetUtilsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:48,377 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'inetUtils' of type [org.springframework.cloud.commons.util.InetUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:49,002 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'nacosProperties' of type [com.alibaba.cloud.nacos.NacosDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:49,009 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'nacosDiscoveryClient' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:49,032 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties' of type [org.springframework.boot.autoconfigure.web.ServerProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:49,038 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$c14f32b8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:49,634 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'simpleDiscoveryProperties' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:49,638 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'simpleDiscoveryClient' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:49,643 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'compositeDiscoveryClient' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:49,648 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.util.JSONUtils' of type [com.alibaba.cloud.dubbo.util.JSONUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:49,766 WARN [main][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:0) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:49,766 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository' of type [com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:49,806 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:49,829 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties' of type [org.springframework.boot.autoconfigure.http.HttpProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:49,836 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$f971fe8e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:49,860 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'stringHttpMessageConverter' of type [org.springframework.http.converter.StringHttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:49,869 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$3347fa8e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:49,880 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$7c3ebeb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:49,891 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$ba10ae04] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:49,902 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$752793f3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:49,911 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:49,920 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:49,931 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$9bf30b21] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:49,949 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:49,955 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$e9cf897a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:49,968 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:49,973 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:49,981 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:49,986 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:50,014 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:50,028 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'mappingJackson2HttpMessageConverter' of type [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:50,038 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$$EnhancerBySpringCGLIB$$c66437ee] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:50,048 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'messageConverters' of type [org.springframework.boot.autoconfigure.http.HttpMessageConverters] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:50,053 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:50,062 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:50,073 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:50,074 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:50,097 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:50,123 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:50,130 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:50,136 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:50,171 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$c84a6f57] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:50,404 INFO [main][DruidDataSourceAutoConfigure.java:56] - Init DruidDataSource
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:50,858 INFO [main][DruidDataSource.java:1002] - {dataSource-1} inited
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:51,787 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:51,788 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:51,798 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:51,798 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:52,458 INFO [main][ExecutorConfigurationSupport.java:171] - Initializing ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:53,268 INFO [main][ExecutorConfigurationSupport.java:171] - Initializing ExecutorService
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:53,354 INFO [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.RegistryConfig#0] have been binding by prefix of configuration properties : dubbo.registry
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:53,361 INFO [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.ProtocolConfig#0] have been binding by prefix of configuration properties : dubbo.protocol
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:53,374 INFO [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.ConsumerConfig#0] have been binding by prefix of configuration properties : dubbo.consumer
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:55,068 INFO [main][EndpointLinksResolver.java:59] - Exposing 4 endpoint(s) beneath base path '/actuator'
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:55,348 INFO [main][DubboServiceMetadataRepository.java:262] - The metadata of Dubbo services has been initialized
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:55,392 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:0) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:55,392 INFO [main][ServiceBean.java:112] -  [DUBBO] The service ready on spring started. service: com.shanjupay.transaction.api.PayChannelService, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:55,424 WARN [main][AbstractInterfaceConfig.java:265] -  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:55,529 INFO [main][ServiceConfig.java:643] -  [DUBBO] Export dubbo service com.shanjupay.transaction.api.PayChannelService to local registry url : injvm://127.0.0.1/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryAppBindPlatformChannel,queryPayChannelByPlatformChannel&pid=4408&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721175433, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:55,530 INFO [main][ServiceConfig.java:581] -  [DUBBO] Export dubbo service com.shanjupay.transaction.api.PayChannelService to url dubbo://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryAppBindPlatformChannel,queryPayChannelByPlatformChannel&pid=4408&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721175433, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:55,531 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:55,531 INFO [main][ServiceConfig.java:595] -  [DUBBO] Register dubbo service com.shanjupay.transaction.api.PayChannelService url dubbo://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryAppBindPlatformChannel,queryPayChannelByPlatformChannel&pid=4408&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721175433 to registry registry://localhost:9090/org.apache.dubbo.registry.RegistryService?application=transaction-service&dubbo=2.0.2&pid=4408&qos.enable=false&qos.port=22250&registry=spring-cloud&release=2.7.3&timestamp=1589721175426, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:55,569 INFO [main][QosProtocolWrapper.java:89] -  [DUBBO] qos won't be started because it is disabled. Please check dubbo.application.qos.enable is configured either in system property, dubbo.properties or XML/spring-boot configuration., dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:56,358 INFO [main][AbstractServer.java:73] -  [DUBBO] Start NettyServer bind /0.0.0.0:20893, export /169.254.160.132:20893, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:56,361 WARN [main][SpringExtensionFactory.java:86] -  [DUBBO] No spring extension (bean) named:applicationContext, try to find an extension (bean) of type org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:56,362 WARN [main][SpringExtensionFactory.java:104] -  [DUBBO] No spring extension (bean) named:applicationContext, type:org.springframework.context.ConfigurableApplicationContext found, stop get bean., dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:56,375 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: dubbo://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryAppBindPlatformChannel,queryPayChannelByPlatformChannel&pid=4408&register=true&release=2.7.3&side=provider&timestamp=1589721175433, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:56,964 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: provider://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryAppBindPlatformChannel,queryPayChannelByPlatformChannel&pid=4408&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721175433, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:56,966 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:56,967 INFO [main][ServiceConfig.java:595] -  [DUBBO] Register dubbo service com.shanjupay.transaction.api.PayChannelService url dubbo://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryAppBindPlatformChannel,queryPayChannelByPlatformChannel&pid=4408&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721175433 to registry registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=transaction-service&dubbo=2.0.2&pid=4408&qos.enable=false&qos.port=22250&registry=nacos&release=2.7.3&timestamp=1589721175431, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:56,971 INFO [main][AbstractRegistry.java:212] -  [DUBBO] Load registry cache file C:\Users\lige\.dubbo\dubbo-registry-transaction-service-127.0.0.1:8848.cache, data: {merchant-application/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0=dubbo://169.254.160.132:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=15904&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1589706244164&version=1.0.0}, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:56,972 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: dubbo://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryAppBindPlatformChannel,queryPayChannelByPlatformChannel&pid=4408&register=true&release=2.7.3&side=provider&timestamp=1589721175433, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:56,990 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: provider://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryAppBindPlatformChannel,queryPayChannelByPlatformChannel&pid=4408&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721175433, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:57,027 WARN [main][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryAppBindPlatformChannel,queryPayChannelByPlatformChannel&pid=4408&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721175433, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:57,032 WARN [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryAppBindPlatformChannel,queryPayChannelByPlatformChannel&pid=4408&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721175433, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:57,037 INFO [main][StartupInfoLogger.java:59] - Started TestPayChannelService in 14.205 seconds (JVM running for 16.399)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:57,546 INFO [Thread-11][AwaitingNonWebApplicationListener.java:155] -  [Dubbo] Current Spring Boot Application is about to shutdown...
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:57,547 INFO [Thread-11][AbstractRegistryFactory.java:68] -  [DUBBO] Close all registries [nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=transaction-service&dubbo=2.0.2&interface=org.apache.dubbo.registry.RegistryService&pid=4408&qos.enable=false&qos.port=22250&release=2.7.3&timestamp=1589721175431], dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:57,548 INFO [Thread-11][AbstractRegistry.java:458] -  [DUBBO] Destroy registry:nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=transaction-service&dubbo=2.0.2&interface=org.apache.dubbo.registry.RegistryService&pid=4408&qos.enable=false&qos.port=22250&release=2.7.3&timestamp=1589721175431, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:57,548 INFO [Thread-11][AbstractRegistry.java:291] -  [DUBBO] Unregister: dubbo://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryAppBindPlatformChannel,queryPayChannelByPlatformChannel&pid=4408&register=true&release=2.7.3&side=provider&timestamp=1589721175433, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:57,555 INFO [Thread-11][AbstractRegistry.java:467] -  [DUBBO] Destroy unregister url dubbo://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryAppBindPlatformChannel,queryPayChannelByPlatformChannel&pid=4408&register=true&release=2.7.3&side=provider&timestamp=1589721175433, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:57,556 INFO [Thread-11][AbstractRegistry.java:320] -  [DUBBO] Unsubscribe: provider://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryAppBindPlatformChannel,queryPayChannelByPlatformChannel&pid=4408&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721175433, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:57,556 INFO [Thread-11][AbstractRegistry.java:483] -  [DUBBO] Destroy unsubscribe url provider://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryAppBindPlatformChannel,queryPayChannelByPlatformChannel&pid=4408&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721175433, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:57,557 INFO [Thread-11][DubboProtocol.java:616] -  [DUBBO] Close dubbo server: /169.254.160.132:20893, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:57,558 INFO [Thread-11][AbstractServer.java:153] -  [DUBBO] Close NettyServer bind /0.0.0.0:20893, export /169.254.160.132:20893, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:57,560 INFO [Thread-11][AbstractProtocol.java:79] -  [DUBBO] Unexport service: dubbo://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryAppBindPlatformChannel,queryPayChannelByPlatformChannel&pid=4408&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721175433, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:57,563 INFO [Thread-11][Server.java:112] -  [DUBBO] qos-server stopped., dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:57,563 INFO [Thread-11][AbstractProtocol.java:79] -  [DUBBO] Unexport service: injvm://127.0.0.1/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryAppBindPlatformChannel,queryPayChannelByPlatformChannel&pid=4408&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721175433, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:57,564 INFO [Thread-11][AbstractRegistry.java:291] -  [DUBBO] Unregister: dubbo://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryAppBindPlatformChannel,queryPayChannelByPlatformChannel&pid=4408&register=true&release=2.7.3&side=provider&timestamp=1589721175433, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:57,564 INFO [Thread-11][AbstractRegistry.java:320] -  [DUBBO] Unsubscribe: provider://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryAppBindPlatformChannel,queryPayChannelByPlatformChannel&pid=4408&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721175433, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:57,566 INFO [Exporter-Unexport-thread-1][RegistryProtocol.java:689] -  [DUBBO] Waiting 10000ms for registry to notify all consumers before unexport. Usually, this is called when you use dubbo API, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:57,583 INFO [Thread-11][ExecutorConfigurationSupport.java:208] - Shutting down ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:57,587 INFO [Thread-11][DruidDataSource.java:1885] - {dataSource-1} closing ...
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:57,593 INFO [Thread-11][DruidDataSource.java:1955] - {dataSource-1} closed
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:57,595 INFO [Thread-11][DubboGenericServiceFactory.java:159] - The Dubbo GenericService ReferenceBeans are destroying...
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:12:57,595 INFO [Thread-11][AnnotationInjectedBeanPostProcessor.java:305] - class org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor was destroying!
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:10,475 INFO [main][AbstractTestContextBootstrapper.java:308] - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.shanjupay.transaction.TestPayChannelService], using SpringBootContextLoader
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:10,495 INFO [main][AbstractContextLoader.java:264] - Could not detect default resource locations for test class [com.shanjupay.transaction.TestPayChannelService]: no resource found for suffixes {-context.xml, Context.groovy}.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:10,496 INFO [main][AnnotationConfigContextLoaderUtils.java:83] - Could not detect default configuration classes for test class [com.shanjupay.transaction.TestPayChannelService]: TestPayChannelService does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:10,799 INFO [main][SpringBootTestContextBootstrapper.java:247] - Found @SpringBootConfiguration com.shanjupay.transaction.TransactionBootstrap for test class com.shanjupay.transaction.TestPayChannelService
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:11,150 INFO [main][AbstractTestContextBootstrapper.java:248] - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:11,171 INFO [main][AbstractTestContextBootstrapper.java:177] - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@3cce57c7, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1cf56a1c, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@33f676f6, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@4c5ae43b, org.springframework.test.context.support.DirtiesContextTestExecutionListener@264f218, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3576ddc2, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@35b74c5c, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@2e570ded, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@b86de0d, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@81d9a72, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@747f281, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@1169afe1]
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:12,157 INFO [main][:] - using logger: org.apache.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:12,163 INFO [main][WelcomeLogoApplicationListener.java:63] - 

 :: Dubbo Spring Boot (v2.7.1) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.7.3) : https://github.com/apache/incubator-dubbo
 :: Discuss group : dev@dubbo.apache.org

[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:12,168 INFO [main][OverrideDubboConfigApplicationListener.java:68] - Dubbo Config was overridden by externalized configuration {dubbo.application.name=transaction-service, dubbo.application.qos-enable=false, dubbo.application.qos.port=22250, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20893, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.shanjupay}
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:12,640 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3e288448] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:13,355 INFO [main][OverrideDubboConfigApplicationListener.java:68] - Dubbo Config was overridden by externalized configuration {dubbo.application.name=transaction-service, dubbo.application.qos-enable=false, dubbo.application.qos.port=22250, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20893, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.shanjupay}
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:13,834 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'spring-boot-http.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:13,845 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'spring-boot-starter-druid.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:13,855 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'spring-boot-mybatis-plus.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:13,866 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'transaction-service.yaml', group: 'SHANJUPAY_GROUP'
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:13,868 INFO [main][PropertySourceBootstrapConfiguration.java:98] - Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource {name='transaction-service.yaml'}, NacosPropertySource {name='spring-boot-mybatis-plus.yaml'}, NacosPropertySource {name='spring-boot-starter-druid.yaml'}, NacosPropertySource {name='spring-boot-http.yaml'}]}
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:13,910 INFO [main][SpringApplication.java:675] - No active profile set, falling back to default profiles: default
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:14,851 WARN [main][EndpointId.java:135] - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:14,854 WARN [main][EndpointId.java:135] - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:14,890 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ApplicationConfig#0, class : org.apache.dubbo.config.ApplicationConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:14,891 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ApplicationConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:14,891 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.RegistryConfig#0, class : org.apache.dubbo.config.RegistryConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:14,892 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.RegistryConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:14,892 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ProtocolConfig#0, class : org.apache.dubbo.config.ProtocolConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:14,892 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ProtocolConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:14,892 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ConsumerConfig#0, class : org.apache.dubbo.config.ConsumerConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:14,893 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ConsumerConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:15,121 INFO [main][RepositoryConfigurationDelegate.java:244] - Multiple Spring Data modules found, entering strict repository configuration mode!
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:15,126 INFO [main][RepositoryConfigurationDelegate.java:126] - Bootstrapping Spring Data repositories in DEFAULT mode.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:15,174 INFO [main][RepositoryConfigurationDelegate.java:182] - Finished Spring Data repository scanning in 27ms. Found 0 repository interfaces.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:15,275 WARN [main][EndpointId.java:135] - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:15,382 INFO [main][ServiceAnnotationBeanPostProcessor.java:204] -  [DUBBO] BeanNameGenerator bean can't be found in BeanFactory with name [org.springframework.context.annotation.internalConfigurationBeanNameGenerator], dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:15,383 INFO [main][ServiceAnnotationBeanPostProcessor.java:206] -  [DUBBO] BeanNameGenerator will be a instance of org.springframework.context.annotation.AnnotationBeanNameGenerator , it maybe a potential problem on bean name generation., dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:15,417 INFO [main][ServiceAnnotationBeanPostProcessor.java:284] -  [DUBBO] The BeanDefinition[Root bean: class [org.apache.dubbo.config.spring.ServiceBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] of ServiceBean has been registered with name : ServiceBean:com.shanjupay.transaction.api.PayChannelService, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:15,417 INFO [main][ServiceAnnotationBeanPostProcessor.java:161] -  [DUBBO] 1 annotated Dubbo's @Service Components { [Bean definition with name 'payChannelServiceImpl': Generic bean: class [com.shanjupay.transaction.service.PayChannelServiceImpl]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\shanjupay\shanjupay-transaction\shanjupay-transaction-service\target\classes\com\shanjupay\transaction\service\PayChannelServiceImpl.class]] } were scanned under package[com.shanjupay], dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:15,420 INFO [main][ConfigurationClassPostProcessor.java:380] - Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboRelaxedBinding2AutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:15,420 INFO [main][ConfigurationClassPostProcessor.java:380] - Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:15,656 INFO [main][GenericScope.java:294] - BeanFactory id=61cd5608-3555-3dd5-ac76-8adf07fc4aac
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:15,757 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:15,929 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$220e814b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:16,141 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties' of type [com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:16,160 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'advisor' of type [org.springframework.aop.support.RegexpMethodPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:16,165 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration$$EnhancerBySpringCGLIB$$a5cfd04f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:16,187 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubbo.cloud-com.alibaba.cloud.dubbo.env.DubboCloudProperties' of type [com.alibaba.cloud.dubbo.env.DubboCloudProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:16,212 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'metadataJsonResolver' of type [com.alibaba.cloud.dubbo.metadata.resolver.DubboServiceBeanMetadataResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:16,234 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.apache.dubbo.config.ApplicationConfig#0' of type [org.apache.dubbo.config.ApplicationConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:16,247 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboProtocolConfigSupplier' of type [com.alibaba.cloud.dubbo.metadata.DubboProtocolConfigSupplier] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:16,249 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:16,250 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration$$EnhancerBySpringCGLIB$$180f6cc9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:16,258 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration$$EnhancerBySpringCGLIB$$aab97521] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:16,271 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboGenericServiceFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:16,276 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboMetadataConfigServiceProxy' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceProxy] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:16,284 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$6afeaedb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:16,292 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$5ec9b7a0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:16,307 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.commons.util.UtilAutoConfiguration' of type [org.springframework.cloud.commons.util.UtilAutoConfiguration$$EnhancerBySpringCGLIB$$e9bc4acf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:16,316 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'inetUtilsProperties' of type [org.springframework.cloud.commons.util.InetUtilsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:16,319 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'inetUtils' of type [org.springframework.cloud.commons.util.InetUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:16,966 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'nacosProperties' of type [com.alibaba.cloud.nacos.NacosDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:16,973 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'nacosDiscoveryClient' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:17,003 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties' of type [org.springframework.boot.autoconfigure.web.ServerProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:17,007 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$372d47a9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:17,603 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'simpleDiscoveryProperties' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:17,607 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'simpleDiscoveryClient' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:17,613 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'compositeDiscoveryClient' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:17,618 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.util.JSONUtils' of type [com.alibaba.cloud.dubbo.util.JSONUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:17,725 WARN [main][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:0) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:17,725 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository' of type [com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:17,775 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:17,801 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties' of type [org.springframework.boot.autoconfigure.http.HttpProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:17,820 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$6f50137f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:17,850 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'stringHttpMessageConverter' of type [org.springframework.http.converter.StringHttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:17,860 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$a9260f7f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:17,869 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$7da200dc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:17,883 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$2feec2f5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:17,890 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$eb05a8e4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:17,902 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:17,910 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:17,922 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$11d12012] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:17,940 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:17,948 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$5fad9e6b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:17,960 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:17,963 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:17,972 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:17,977 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:18,004 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:18,021 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'mappingJackson2HttpMessageConverter' of type [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:18,031 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$$EnhancerBySpringCGLIB$$3c424cdf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:18,045 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'messageConverters' of type [org.springframework.boot.autoconfigure.http.HttpMessageConverters] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:18,055 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:18,067 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:18,079 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:18,081 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:18,117 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:18,134 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:18,138 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:18,144 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:18,169 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3e288448] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:18,390 INFO [main][DruidDataSourceAutoConfigure.java:56] - Init DruidDataSource
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:18,850 INFO [main][DruidDataSource.java:1002] - {dataSource-1} inited
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:19,827 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:19,828 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:19,836 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:19,837 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:20,517 INFO [main][ExecutorConfigurationSupport.java:171] - Initializing ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:21,349 INFO [main][ExecutorConfigurationSupport.java:171] - Initializing ExecutorService
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:21,442 INFO [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.RegistryConfig#0] have been binding by prefix of configuration properties : dubbo.registry
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:21,449 INFO [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.ProtocolConfig#0] have been binding by prefix of configuration properties : dubbo.protocol
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:21,461 INFO [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.ConsumerConfig#0] have been binding by prefix of configuration properties : dubbo.consumer
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:23,286 INFO [main][EndpointLinksResolver.java:59] - Exposing 4 endpoint(s) beneath base path '/actuator'
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:23,604 INFO [main][DubboServiceMetadataRepository.java:262] - The metadata of Dubbo services has been initialized
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:23,634 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:0) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:23,651 INFO [main][ServiceBean.java:112] -  [DUBBO] The service ready on spring started. service: com.shanjupay.transaction.api.PayChannelService, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:23,672 WARN [main][AbstractInterfaceConfig.java:265] -  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:23,778 INFO [main][ServiceConfig.java:643] -  [DUBBO] Export dubbo service com.shanjupay.transaction.api.PayChannelService to local registry url : injvm://127.0.0.1/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryAppBindPlatformChannel,queryPayChannelByPlatformChannel&pid=1464&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721263680, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:23,778 INFO [main][ServiceConfig.java:581] -  [DUBBO] Export dubbo service com.shanjupay.transaction.api.PayChannelService to url dubbo://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryAppBindPlatformChannel,queryPayChannelByPlatformChannel&pid=1464&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721263680, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:23,779 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:23,779 INFO [main][ServiceConfig.java:595] -  [DUBBO] Register dubbo service com.shanjupay.transaction.api.PayChannelService url dubbo://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryAppBindPlatformChannel,queryPayChannelByPlatformChannel&pid=1464&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721263680 to registry registry://localhost:9090/org.apache.dubbo.registry.RegistryService?application=transaction-service&dubbo=2.0.2&pid=1464&qos.enable=false&qos.port=22250&registry=spring-cloud&release=2.7.3&timestamp=1589721263672, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:23,820 INFO [main][QosProtocolWrapper.java:89] -  [DUBBO] qos won't be started because it is disabled. Please check dubbo.application.qos.enable is configured either in system property, dubbo.properties or XML/spring-boot configuration., dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:24,641 INFO [main][AbstractServer.java:73] -  [DUBBO] Start NettyServer bind /0.0.0.0:20893, export /169.254.160.132:20893, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:24,643 WARN [main][SpringExtensionFactory.java:86] -  [DUBBO] No spring extension (bean) named:applicationContext, try to find an extension (bean) of type org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:24,645 WARN [main][SpringExtensionFactory.java:104] -  [DUBBO] No spring extension (bean) named:applicationContext, type:org.springframework.context.ConfigurableApplicationContext found, stop get bean., dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:24,657 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: dubbo://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryAppBindPlatformChannel,queryPayChannelByPlatformChannel&pid=1464&register=true&release=2.7.3&side=provider&timestamp=1589721263680, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:25,252 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: provider://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryAppBindPlatformChannel,queryPayChannelByPlatformChannel&pid=1464&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721263680, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:25,255 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:25,255 INFO [main][ServiceConfig.java:595] -  [DUBBO] Register dubbo service com.shanjupay.transaction.api.PayChannelService url dubbo://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryAppBindPlatformChannel,queryPayChannelByPlatformChannel&pid=1464&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721263680 to registry registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=transaction-service&dubbo=2.0.2&pid=1464&qos.enable=false&qos.port=22250&registry=nacos&release=2.7.3&timestamp=1589721263678, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:25,261 INFO [main][AbstractRegistry.java:212] -  [DUBBO] Load registry cache file C:\Users\lige\.dubbo\dubbo-registry-transaction-service-127.0.0.1:8848.cache, data: {merchant-application/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0=dubbo://169.254.160.132:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=15904&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1589706244164&version=1.0.0}, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:25,261 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: dubbo://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryAppBindPlatformChannel,queryPayChannelByPlatformChannel&pid=1464&register=true&release=2.7.3&side=provider&timestamp=1589721263680, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:25,279 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: provider://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryAppBindPlatformChannel,queryPayChannelByPlatformChannel&pid=1464&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721263680, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:25,316 WARN [main][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryAppBindPlatformChannel,queryPayChannelByPlatformChannel&pid=1464&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721263680, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:25,321 WARN [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryAppBindPlatformChannel,queryPayChannelByPlatformChannel&pid=1464&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721263680, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:25,328 INFO [main][StartupInfoLogger.java:59] - Started TestPayChannelService in 14.095 seconds (JVM running for 16.308)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:25,817 INFO [Thread-11][AwaitingNonWebApplicationListener.java:155] -  [Dubbo] Current Spring Boot Application is about to shutdown...
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:25,818 INFO [Thread-11][AbstractRegistryFactory.java:68] -  [DUBBO] Close all registries [nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=transaction-service&dubbo=2.0.2&interface=org.apache.dubbo.registry.RegistryService&pid=1464&qos.enable=false&qos.port=22250&release=2.7.3&timestamp=1589721263678], dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:25,818 INFO [Thread-11][AbstractRegistry.java:458] -  [DUBBO] Destroy registry:nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=transaction-service&dubbo=2.0.2&interface=org.apache.dubbo.registry.RegistryService&pid=1464&qos.enable=false&qos.port=22250&release=2.7.3&timestamp=1589721263678, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:25,818 INFO [Thread-11][AbstractRegistry.java:291] -  [DUBBO] Unregister: dubbo://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryAppBindPlatformChannel,queryPayChannelByPlatformChannel&pid=1464&register=true&release=2.7.3&side=provider&timestamp=1589721263680, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:25,829 INFO [Thread-11][AbstractRegistry.java:467] -  [DUBBO] Destroy unregister url dubbo://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryAppBindPlatformChannel,queryPayChannelByPlatformChannel&pid=1464&register=true&release=2.7.3&side=provider&timestamp=1589721263680, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:25,831 INFO [Thread-11][AbstractRegistry.java:320] -  [DUBBO] Unsubscribe: provider://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryAppBindPlatformChannel,queryPayChannelByPlatformChannel&pid=1464&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721263680, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:25,831 INFO [Thread-11][AbstractRegistry.java:483] -  [DUBBO] Destroy unsubscribe url provider://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryAppBindPlatformChannel,queryPayChannelByPlatformChannel&pid=1464&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721263680, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:25,833 INFO [Thread-11][DubboProtocol.java:616] -  [DUBBO] Close dubbo server: /169.254.160.132:20893, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:25,834 INFO [Thread-11][AbstractServer.java:153] -  [DUBBO] Close NettyServer bind /0.0.0.0:20893, export /169.254.160.132:20893, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:25,837 INFO [Thread-11][AbstractProtocol.java:79] -  [DUBBO] Unexport service: dubbo://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryAppBindPlatformChannel,queryPayChannelByPlatformChannel&pid=1464&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721263680, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:25,840 INFO [Thread-11][Server.java:112] -  [DUBBO] qos-server stopped., dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:25,841 INFO [Thread-11][AbstractProtocol.java:79] -  [DUBBO] Unexport service: injvm://127.0.0.1/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryAppBindPlatformChannel,queryPayChannelByPlatformChannel&pid=1464&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721263680, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:25,842 INFO [Thread-11][AbstractRegistry.java:291] -  [DUBBO] Unregister: dubbo://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryAppBindPlatformChannel,queryPayChannelByPlatformChannel&pid=1464&register=true&release=2.7.3&side=provider&timestamp=1589721263680, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:25,843 INFO [Thread-11][AbstractRegistry.java:320] -  [DUBBO] Unsubscribe: provider://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryAppBindPlatformChannel,queryPayChannelByPlatformChannel&pid=1464&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721263680, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:25,847 INFO [Exporter-Unexport-thread-1][RegistryProtocol.java:689] -  [DUBBO] Waiting 10000ms for registry to notify all consumers before unexport. Usually, this is called when you use dubbo API, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:25,862 INFO [Thread-11][ExecutorConfigurationSupport.java:208] - Shutting down ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:25,866 INFO [Thread-11][DruidDataSource.java:1885] - {dataSource-1} closing ...
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:25,872 INFO [Thread-11][DruidDataSource.java:1955] - {dataSource-1} closed
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:25,873 INFO [Thread-11][DubboGenericServiceFactory.java:159] - The Dubbo GenericService ReferenceBeans are destroying...
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:25,874 INFO [Thread-11][AnnotationInjectedBeanPostProcessor.java:305] - class org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor was destroying!
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:58,988 INFO [main][AbstractTestContextBootstrapper.java:308] - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.shanjupay.transaction.TestPayChannelService], using SpringBootContextLoader
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:59,009 INFO [main][AbstractContextLoader.java:264] - Could not detect default resource locations for test class [com.shanjupay.transaction.TestPayChannelService]: no resource found for suffixes {-context.xml, Context.groovy}.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:59,011 INFO [main][AnnotationConfigContextLoaderUtils.java:83] - Could not detect default configuration classes for test class [com.shanjupay.transaction.TestPayChannelService]: TestPayChannelService does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:59,342 INFO [main][SpringBootTestContextBootstrapper.java:247] - Found @SpringBootConfiguration com.shanjupay.transaction.TransactionBootstrap for test class com.shanjupay.transaction.TestPayChannelService
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:59,699 INFO [main][AbstractTestContextBootstrapper.java:248] - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:14:59,722 INFO [main][AbstractTestContextBootstrapper.java:177] - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@3cce57c7, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1cf56a1c, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@33f676f6, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@4c5ae43b, org.springframework.test.context.support.DirtiesContextTestExecutionListener@264f218, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3576ddc2, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@35b74c5c, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@2e570ded, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@b86de0d, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@81d9a72, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@747f281, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@1169afe1]
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:00,664 INFO [main][:] - using logger: org.apache.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:00,669 INFO [main][WelcomeLogoApplicationListener.java:63] - 

 :: Dubbo Spring Boot (v2.7.1) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.7.3) : https://github.com/apache/incubator-dubbo
 :: Discuss group : dev@dubbo.apache.org

[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:00,676 INFO [main][OverrideDubboConfigApplicationListener.java:68] - Dubbo Config was overridden by externalized configuration {dubbo.application.name=transaction-service, dubbo.application.qos-enable=false, dubbo.application.qos.port=22250, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20893, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.shanjupay}
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:01,126 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3e288448] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:01,854 INFO [main][OverrideDubboConfigApplicationListener.java:68] - Dubbo Config was overridden by externalized configuration {dubbo.application.name=transaction-service, dubbo.application.qos-enable=false, dubbo.application.qos.port=22250, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20893, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.shanjupay}
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:02,346 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'spring-boot-http.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:02,357 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'spring-boot-starter-druid.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:02,369 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'spring-boot-mybatis-plus.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:02,377 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'transaction-service.yaml', group: 'SHANJUPAY_GROUP'
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:02,379 INFO [main][PropertySourceBootstrapConfiguration.java:98] - Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource {name='transaction-service.yaml'}, NacosPropertySource {name='spring-boot-mybatis-plus.yaml'}, NacosPropertySource {name='spring-boot-starter-druid.yaml'}, NacosPropertySource {name='spring-boot-http.yaml'}]}
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:02,414 INFO [main][SpringApplication.java:675] - No active profile set, falling back to default profiles: default
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:03,342 WARN [main][EndpointId.java:135] - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:03,345 WARN [main][EndpointId.java:135] - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:03,384 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ApplicationConfig#0, class : org.apache.dubbo.config.ApplicationConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:03,385 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ApplicationConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:03,386 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.RegistryConfig#0, class : org.apache.dubbo.config.RegistryConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:03,386 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.RegistryConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:03,386 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ProtocolConfig#0, class : org.apache.dubbo.config.ProtocolConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:03,386 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ProtocolConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:03,387 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ConsumerConfig#0, class : org.apache.dubbo.config.ConsumerConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:03,387 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ConsumerConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:03,660 INFO [main][RepositoryConfigurationDelegate.java:244] - Multiple Spring Data modules found, entering strict repository configuration mode!
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:03,665 INFO [main][RepositoryConfigurationDelegate.java:126] - Bootstrapping Spring Data repositories in DEFAULT mode.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:03,719 INFO [main][RepositoryConfigurationDelegate.java:182] - Finished Spring Data repository scanning in 32ms. Found 0 repository interfaces.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:03,833 WARN [main][EndpointId.java:135] - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:03,954 INFO [main][ServiceAnnotationBeanPostProcessor.java:204] -  [DUBBO] BeanNameGenerator bean can't be found in BeanFactory with name [org.springframework.context.annotation.internalConfigurationBeanNameGenerator], dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:03,954 INFO [main][ServiceAnnotationBeanPostProcessor.java:206] -  [DUBBO] BeanNameGenerator will be a instance of org.springframework.context.annotation.AnnotationBeanNameGenerator , it maybe a potential problem on bean name generation., dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:03,990 INFO [main][ServiceAnnotationBeanPostProcessor.java:284] -  [DUBBO] The BeanDefinition[Root bean: class [org.apache.dubbo.config.spring.ServiceBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] of ServiceBean has been registered with name : ServiceBean:com.shanjupay.transaction.api.PayChannelService, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:03,991 INFO [main][ServiceAnnotationBeanPostProcessor.java:161] -  [DUBBO] 1 annotated Dubbo's @Service Components { [Bean definition with name 'payChannelServiceImpl': Generic bean: class [com.shanjupay.transaction.service.PayChannelServiceImpl]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\shanjupay\shanjupay-transaction\shanjupay-transaction-service\target\classes\com\shanjupay\transaction\service\PayChannelServiceImpl.class]] } were scanned under package[com.shanjupay], dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:03,994 INFO [main][ConfigurationClassPostProcessor.java:380] - Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboRelaxedBinding2AutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:03,995 INFO [main][ConfigurationClassPostProcessor.java:380] - Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:04,262 INFO [main][GenericScope.java:294] - BeanFactory id=61cd5608-3555-3dd5-ac76-8adf07fc4aac
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:04,367 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:04,533 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$220e814b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:04,674 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties' of type [com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:04,686 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'advisor' of type [org.springframework.aop.support.RegexpMethodPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:04,691 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration$$EnhancerBySpringCGLIB$$a5cfd04f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:04,707 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubbo.cloud-com.alibaba.cloud.dubbo.env.DubboCloudProperties' of type [com.alibaba.cloud.dubbo.env.DubboCloudProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:04,725 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'metadataJsonResolver' of type [com.alibaba.cloud.dubbo.metadata.resolver.DubboServiceBeanMetadataResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:04,740 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.apache.dubbo.config.ApplicationConfig#0' of type [org.apache.dubbo.config.ApplicationConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:04,758 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboProtocolConfigSupplier' of type [com.alibaba.cloud.dubbo.metadata.DubboProtocolConfigSupplier] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:04,760 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:04,761 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration$$EnhancerBySpringCGLIB$$180f6cc9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:04,767 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration$$EnhancerBySpringCGLIB$$aab97521] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:04,778 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboGenericServiceFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:04,785 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboMetadataConfigServiceProxy' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceProxy] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:04,792 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$6afeaedb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:04,799 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$5ec9b7a0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:04,816 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.commons.util.UtilAutoConfiguration' of type [org.springframework.cloud.commons.util.UtilAutoConfiguration$$EnhancerBySpringCGLIB$$e9bc4acf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:04,828 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'inetUtilsProperties' of type [org.springframework.cloud.commons.util.InetUtilsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:04,831 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'inetUtils' of type [org.springframework.cloud.commons.util.InetUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:05,484 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'nacosProperties' of type [com.alibaba.cloud.nacos.NacosDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:05,490 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'nacosDiscoveryClient' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:05,514 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties' of type [org.springframework.boot.autoconfigure.web.ServerProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:05,519 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$372d47a9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:06,116 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'simpleDiscoveryProperties' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:06,120 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'simpleDiscoveryClient' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:06,125 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'compositeDiscoveryClient' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:06,130 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.util.JSONUtils' of type [com.alibaba.cloud.dubbo.util.JSONUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:06,235 WARN [main][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:0) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:06,236 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository' of type [com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:06,289 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:06,314 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties' of type [org.springframework.boot.autoconfigure.http.HttpProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:06,332 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$6f50137f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:06,350 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'stringHttpMessageConverter' of type [org.springframework.http.converter.StringHttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:06,368 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$a9260f7f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:06,391 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$7da200dc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:06,403 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$2feec2f5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:06,412 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$eb05a8e4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:06,426 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:06,435 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:06,448 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$11d12012] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:06,468 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:06,476 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$5fad9e6b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:06,488 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:06,493 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:06,502 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:06,508 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:06,542 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:06,563 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'mappingJackson2HttpMessageConverter' of type [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:06,573 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$$EnhancerBySpringCGLIB$$3c424cdf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:06,592 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'messageConverters' of type [org.springframework.boot.autoconfigure.http.HttpMessageConverters] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:06,603 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:06,623 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:06,635 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:06,639 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:06,697 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:06,713 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:06,717 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:06,723 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:06,755 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3e288448] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:07,032 INFO [main][DruidDataSourceAutoConfigure.java:56] - Init DruidDataSource
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:07,502 INFO [main][DruidDataSource.java:1002] - {dataSource-1} inited
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:08,404 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:08,404 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:08,412 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:08,412 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:09,106 INFO [main][ExecutorConfigurationSupport.java:171] - Initializing ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:09,909 INFO [main][ExecutorConfigurationSupport.java:171] - Initializing ExecutorService
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:09,999 INFO [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.RegistryConfig#0] have been binding by prefix of configuration properties : dubbo.registry
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:10,007 INFO [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.ProtocolConfig#0] have been binding by prefix of configuration properties : dubbo.protocol
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:10,022 INFO [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.ConsumerConfig#0] have been binding by prefix of configuration properties : dubbo.consumer
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:11,856 INFO [main][EndpointLinksResolver.java:59] - Exposing 4 endpoint(s) beneath base path '/actuator'
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:12,163 INFO [main][DubboServiceMetadataRepository.java:262] - The metadata of Dubbo services has been initialized
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:12,205 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:0) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:12,211 INFO [main][ServiceBean.java:112] -  [DUBBO] The service ready on spring started. service: com.shanjupay.transaction.api.PayChannelService, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:12,231 WARN [main][AbstractInterfaceConfig.java:265] -  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:12,328 INFO [main][ServiceConfig.java:643] -  [DUBBO] Export dubbo service com.shanjupay.transaction.api.PayChannelService to local registry url : injvm://127.0.0.1/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=11064&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721312239, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:12,329 INFO [main][ServiceConfig.java:581] -  [DUBBO] Export dubbo service com.shanjupay.transaction.api.PayChannelService to url dubbo://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=11064&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721312239, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:12,330 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:12,330 INFO [main][ServiceConfig.java:595] -  [DUBBO] Register dubbo service com.shanjupay.transaction.api.PayChannelService url dubbo://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=11064&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721312239 to registry registry://localhost:9090/org.apache.dubbo.registry.RegistryService?application=transaction-service&dubbo=2.0.2&pid=11064&qos.enable=false&qos.port=22250&registry=spring-cloud&release=2.7.3&timestamp=1589721312232, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:12,362 INFO [main][QosProtocolWrapper.java:89] -  [DUBBO] qos won't be started because it is disabled. Please check dubbo.application.qos.enable is configured either in system property, dubbo.properties or XML/spring-boot configuration., dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:13,141 INFO [main][AbstractServer.java:73] -  [DUBBO] Start NettyServer bind /0.0.0.0:20893, export /169.254.160.132:20893, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:13,144 WARN [main][SpringExtensionFactory.java:86] -  [DUBBO] No spring extension (bean) named:applicationContext, try to find an extension (bean) of type org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:13,146 WARN [main][SpringExtensionFactory.java:104] -  [DUBBO] No spring extension (bean) named:applicationContext, type:org.springframework.context.ConfigurableApplicationContext found, stop get bean., dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:13,158 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: dubbo://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=11064&register=true&release=2.7.3&side=provider&timestamp=1589721312239, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:13,722 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: provider://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=11064&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721312239, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:13,725 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:13,725 INFO [main][ServiceConfig.java:595] -  [DUBBO] Register dubbo service com.shanjupay.transaction.api.PayChannelService url dubbo://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=11064&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721312239 to registry registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=transaction-service&dubbo=2.0.2&pid=11064&qos.enable=false&qos.port=22250&registry=nacos&release=2.7.3&timestamp=1589721312238, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:13,730 INFO [main][AbstractRegistry.java:212] -  [DUBBO] Load registry cache file C:\Users\lige\.dubbo\dubbo-registry-transaction-service-127.0.0.1:8848.cache, data: {merchant-application/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0=dubbo://169.254.160.132:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=15904&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1589706244164&version=1.0.0}, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:13,731 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: dubbo://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=11064&register=true&release=2.7.3&side=provider&timestamp=1589721312239, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:13,750 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: provider://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=11064&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721312239, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:13,792 WARN [main][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=11064&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721312239, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:13,803 WARN [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=11064&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721312239, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:13,804 INFO [main][StartupInfoLogger.java:59] - Started TestPayChannelService in 14.019 seconds (JVM running for 16.208)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:14,348 INFO [Thread-11][AwaitingNonWebApplicationListener.java:155] -  [Dubbo] Current Spring Boot Application is about to shutdown...
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:14,348 INFO [Thread-11][AbstractRegistryFactory.java:68] -  [DUBBO] Close all registries [nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=transaction-service&dubbo=2.0.2&interface=org.apache.dubbo.registry.RegistryService&pid=11064&qos.enable=false&qos.port=22250&release=2.7.3&timestamp=1589721312238], dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:14,349 INFO [Thread-11][AbstractRegistry.java:458] -  [DUBBO] Destroy registry:nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=transaction-service&dubbo=2.0.2&interface=org.apache.dubbo.registry.RegistryService&pid=11064&qos.enable=false&qos.port=22250&release=2.7.3&timestamp=1589721312238, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:14,349 INFO [Thread-11][AbstractRegistry.java:291] -  [DUBBO] Unregister: dubbo://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=11064&register=true&release=2.7.3&side=provider&timestamp=1589721312239, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:14,359 INFO [Thread-11][AbstractRegistry.java:467] -  [DUBBO] Destroy unregister url dubbo://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=11064&register=true&release=2.7.3&side=provider&timestamp=1589721312239, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:14,360 INFO [Thread-11][AbstractRegistry.java:320] -  [DUBBO] Unsubscribe: provider://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=11064&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721312239, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:14,360 INFO [Thread-11][AbstractRegistry.java:483] -  [DUBBO] Destroy unsubscribe url provider://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=11064&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721312239, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:14,360 INFO [Thread-11][DubboProtocol.java:616] -  [DUBBO] Close dubbo server: /169.254.160.132:20893, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:14,362 INFO [Thread-11][AbstractServer.java:153] -  [DUBBO] Close NettyServer bind /0.0.0.0:20893, export /169.254.160.132:20893, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:14,364 INFO [Thread-11][AbstractProtocol.java:79] -  [DUBBO] Unexport service: dubbo://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=11064&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721312239, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:14,367 INFO [Thread-11][Server.java:112] -  [DUBBO] qos-server stopped., dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:14,367 INFO [Thread-11][AbstractProtocol.java:79] -  [DUBBO] Unexport service: injvm://127.0.0.1/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=11064&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721312239, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:14,369 INFO [Thread-11][AbstractRegistry.java:291] -  [DUBBO] Unregister: dubbo://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=11064&register=true&release=2.7.3&side=provider&timestamp=1589721312239, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:14,369 INFO [Thread-11][AbstractRegistry.java:320] -  [DUBBO] Unsubscribe: provider://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=11064&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721312239, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:14,374 INFO [Exporter-Unexport-thread-1][RegistryProtocol.java:689] -  [DUBBO] Waiting 10000ms for registry to notify all consumers before unexport. Usually, this is called when you use dubbo API, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:14,388 INFO [Thread-11][ExecutorConfigurationSupport.java:208] - Shutting down ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:14,394 INFO [Thread-11][DruidDataSource.java:1885] - {dataSource-1} closing ...
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:14,400 INFO [Thread-11][DruidDataSource.java:1955] - {dataSource-1} closed
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:14,401 INFO [Thread-11][DubboGenericServiceFactory.java:159] - The Dubbo GenericService ReferenceBeans are destroying...
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:14,402 INFO [Thread-11][AnnotationInjectedBeanPostProcessor.java:305] - class org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor was destroying!
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:35,638 INFO [main][AbstractTestContextBootstrapper.java:308] - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.shanjupay.transaction.TestPayChannelService], using SpringBootContextLoader
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:35,675 INFO [main][AbstractContextLoader.java:264] - Could not detect default resource locations for test class [com.shanjupay.transaction.TestPayChannelService]: no resource found for suffixes {-context.xml, Context.groovy}.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:35,676 INFO [main][AnnotationConfigContextLoaderUtils.java:83] - Could not detect default configuration classes for test class [com.shanjupay.transaction.TestPayChannelService]: TestPayChannelService does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:35,972 INFO [main][SpringBootTestContextBootstrapper.java:247] - Found @SpringBootConfiguration com.shanjupay.transaction.TransactionBootstrap for test class com.shanjupay.transaction.TestPayChannelService
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:36,319 INFO [main][AbstractTestContextBootstrapper.java:248] - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:36,352 INFO [main][AbstractTestContextBootstrapper.java:177] - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@3cce57c7, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1cf56a1c, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@33f676f6, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@4c5ae43b, org.springframework.test.context.support.DirtiesContextTestExecutionListener@264f218, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3576ddc2, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@35b74c5c, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@2e570ded, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@b86de0d, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@81d9a72, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@747f281, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@1169afe1]
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:37,317 INFO [main][:] - using logger: org.apache.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:37,322 INFO [main][WelcomeLogoApplicationListener.java:63] - 

 :: Dubbo Spring Boot (v2.7.1) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.7.3) : https://github.com/apache/incubator-dubbo
 :: Discuss group : dev@dubbo.apache.org

[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:37,329 INFO [main][OverrideDubboConfigApplicationListener.java:68] - Dubbo Config was overridden by externalized configuration {dubbo.application.name=transaction-service, dubbo.application.qos-enable=false, dubbo.application.qos.port=22250, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20893, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.shanjupay}
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:37,803 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3e288448] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:37,899 INFO [pool-3-thread-1][AwaitingNonWebApplicationListener.java:140] -  [Dubbo] Current Spring Boot Application is await...
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:38,518 INFO [main][OverrideDubboConfigApplicationListener.java:68] - Dubbo Config was overridden by externalized configuration {dubbo.application.name=transaction-service, dubbo.application.qos-enable=false, dubbo.application.qos.port=22250, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20893, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.shanjupay}
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:38,998 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'spring-boot-http.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:39,008 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'spring-boot-starter-druid.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:39,018 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'spring-boot-mybatis-plus.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:39,026 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'transaction-service.yaml', group: 'SHANJUPAY_GROUP'
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:39,028 INFO [main][PropertySourceBootstrapConfiguration.java:98] - Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource {name='transaction-service.yaml'}, NacosPropertySource {name='spring-boot-mybatis-plus.yaml'}, NacosPropertySource {name='spring-boot-starter-druid.yaml'}, NacosPropertySource {name='spring-boot-http.yaml'}]}
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:39,062 INFO [main][SpringApplication.java:675] - No active profile set, falling back to default profiles: default
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:39,961 WARN [main][EndpointId.java:135] - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:39,964 WARN [main][EndpointId.java:135] - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:39,998 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ApplicationConfig#0, class : org.apache.dubbo.config.ApplicationConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:39,999 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ApplicationConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:40,000 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.RegistryConfig#0, class : org.apache.dubbo.config.RegistryConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:40,000 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.RegistryConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:40,001 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ProtocolConfig#0, class : org.apache.dubbo.config.ProtocolConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:40,001 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ProtocolConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:40,002 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ConsumerConfig#0, class : org.apache.dubbo.config.ConsumerConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:40,002 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ConsumerConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:40,263 INFO [main][RepositoryConfigurationDelegate.java:244] - Multiple Spring Data modules found, entering strict repository configuration mode!
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:40,270 INFO [main][RepositoryConfigurationDelegate.java:126] - Bootstrapping Spring Data repositories in DEFAULT mode.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:40,324 INFO [main][RepositoryConfigurationDelegate.java:182] - Finished Spring Data repository scanning in 27ms. Found 0 repository interfaces.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:40,447 WARN [main][EndpointId.java:135] - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:40,599 INFO [main][ServiceAnnotationBeanPostProcessor.java:204] -  [DUBBO] BeanNameGenerator bean can't be found in BeanFactory with name [org.springframework.context.annotation.internalConfigurationBeanNameGenerator], dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:40,600 INFO [main][ServiceAnnotationBeanPostProcessor.java:206] -  [DUBBO] BeanNameGenerator will be a instance of org.springframework.context.annotation.AnnotationBeanNameGenerator , it maybe a potential problem on bean name generation., dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:40,636 INFO [main][ServiceAnnotationBeanPostProcessor.java:284] -  [DUBBO] The BeanDefinition[Root bean: class [org.apache.dubbo.config.spring.ServiceBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] of ServiceBean has been registered with name : ServiceBean:com.shanjupay.transaction.api.PayChannelService, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:40,637 INFO [main][ServiceAnnotationBeanPostProcessor.java:161] -  [DUBBO] 1 annotated Dubbo's @Service Components { [Bean definition with name 'payChannelServiceImpl': Generic bean: class [com.shanjupay.transaction.service.PayChannelServiceImpl]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\shanjupay\shanjupay-transaction\shanjupay-transaction-service\target\classes\com\shanjupay\transaction\service\PayChannelServiceImpl.class]] } were scanned under package[com.shanjupay], dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:40,641 INFO [main][ConfigurationClassPostProcessor.java:380] - Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboRelaxedBinding2AutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:40,641 INFO [main][ConfigurationClassPostProcessor.java:380] - Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:40,908 INFO [main][GenericScope.java:294] - BeanFactory id=61cd5608-3555-3dd5-ac76-8adf07fc4aac
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:41,009 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:41,180 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$220e814b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:41,321 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties' of type [com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:41,336 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'advisor' of type [org.springframework.aop.support.RegexpMethodPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:41,340 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration$$EnhancerBySpringCGLIB$$a5cfd04f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:41,365 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubbo.cloud-com.alibaba.cloud.dubbo.env.DubboCloudProperties' of type [com.alibaba.cloud.dubbo.env.DubboCloudProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:41,394 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'metadataJsonResolver' of type [com.alibaba.cloud.dubbo.metadata.resolver.DubboServiceBeanMetadataResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:41,416 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.apache.dubbo.config.ApplicationConfig#0' of type [org.apache.dubbo.config.ApplicationConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:41,426 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboProtocolConfigSupplier' of type [com.alibaba.cloud.dubbo.metadata.DubboProtocolConfigSupplier] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:41,432 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:41,433 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration$$EnhancerBySpringCGLIB$$180f6cc9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:41,441 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration$$EnhancerBySpringCGLIB$$aab97521] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:41,451 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboGenericServiceFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:41,457 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboMetadataConfigServiceProxy' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceProxy] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:41,465 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$6afeaedb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:41,474 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$5ec9b7a0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:41,490 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.commons.util.UtilAutoConfiguration' of type [org.springframework.cloud.commons.util.UtilAutoConfiguration$$EnhancerBySpringCGLIB$$e9bc4acf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:41,499 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'inetUtilsProperties' of type [org.springframework.cloud.commons.util.InetUtilsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:41,503 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'inetUtils' of type [org.springframework.cloud.commons.util.InetUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:42,102 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'nacosProperties' of type [com.alibaba.cloud.nacos.NacosDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:42,109 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'nacosDiscoveryClient' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:42,131 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties' of type [org.springframework.boot.autoconfigure.web.ServerProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:42,136 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$372d47a9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:42,741 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'simpleDiscoveryProperties' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:42,746 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'simpleDiscoveryClient' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:42,752 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'compositeDiscoveryClient' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:42,758 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.util.JSONUtils' of type [com.alibaba.cloud.dubbo.util.JSONUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:42,866 WARN [main][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:0) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:42,867 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository' of type [com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:42,906 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:42,928 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties' of type [org.springframework.boot.autoconfigure.http.HttpProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:42,934 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$6f50137f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:42,944 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'stringHttpMessageConverter' of type [org.springframework.http.converter.StringHttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:42,960 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$a9260f7f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:42,973 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$7da200dc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:42,981 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$2feec2f5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:42,994 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$eb05a8e4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:43,008 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:43,018 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:43,034 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$11d12012] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:43,054 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:43,061 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$5fad9e6b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:43,074 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:43,077 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:43,085 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:43,092 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:43,118 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:43,133 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'mappingJackson2HttpMessageConverter' of type [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:43,141 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$$EnhancerBySpringCGLIB$$3c424cdf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:43,153 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'messageConverters' of type [org.springframework.boot.autoconfigure.http.HttpMessageConverters] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:43,167 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:43,191 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:43,217 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:43,218 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:43,250 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:43,268 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:43,274 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:43,279 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:43,308 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3e288448] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:43,600 INFO [main][DruidDataSourceAutoConfigure.java:56] - Init DruidDataSource
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:44,068 INFO [main][DruidDataSource.java:1002] - {dataSource-1} inited
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:44,979 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:44,979 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:44,986 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:44,987 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:45,668 INFO [main][ExecutorConfigurationSupport.java:171] - Initializing ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:46,519 INFO [main][ExecutorConfigurationSupport.java:171] - Initializing ExecutorService
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:46,604 INFO [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.RegistryConfig#0] have been binding by prefix of configuration properties : dubbo.registry
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:46,613 INFO [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.ProtocolConfig#0] have been binding by prefix of configuration properties : dubbo.protocol
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:46,626 INFO [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.ConsumerConfig#0] have been binding by prefix of configuration properties : dubbo.consumer
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:48,405 INFO [main][EndpointLinksResolver.java:59] - Exposing 4 endpoint(s) beneath base path '/actuator'
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:48,731 INFO [main][DubboServiceMetadataRepository.java:262] - The metadata of Dubbo services has been initialized
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:48,771 INFO [main][ServiceBean.java:112] -  [DUBBO] The service ready on spring started. service: com.shanjupay.transaction.api.PayChannelService, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:48,803 WARN [main][AbstractInterfaceConfig.java:265] -  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:48,828 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:0) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:48,932 INFO [main][ServiceConfig.java:643] -  [DUBBO] Export dubbo service com.shanjupay.transaction.api.PayChannelService to local registry url : injvm://127.0.0.1/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=3556&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721348810, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:48,932 INFO [main][ServiceConfig.java:581] -  [DUBBO] Export dubbo service com.shanjupay.transaction.api.PayChannelService to url dubbo://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=3556&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721348810, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:48,933 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:48,934 INFO [main][ServiceConfig.java:595] -  [DUBBO] Register dubbo service com.shanjupay.transaction.api.PayChannelService url dubbo://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=3556&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721348810 to registry registry://localhost:9090/org.apache.dubbo.registry.RegistryService?application=transaction-service&dubbo=2.0.2&pid=3556&qos.enable=false&qos.port=22250&registry=spring-cloud&release=2.7.3&timestamp=1589721348804, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:48,975 INFO [main][QosProtocolWrapper.java:89] -  [DUBBO] qos won't be started because it is disabled. Please check dubbo.application.qos.enable is configured either in system property, dubbo.properties or XML/spring-boot configuration., dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:49,752 INFO [main][AbstractServer.java:73] -  [DUBBO] Start NettyServer bind /0.0.0.0:20893, export /169.254.160.132:20893, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:49,753 WARN [main][SpringExtensionFactory.java:86] -  [DUBBO] No spring extension (bean) named:applicationContext, try to find an extension (bean) of type org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:49,756 WARN [main][SpringExtensionFactory.java:104] -  [DUBBO] No spring extension (bean) named:applicationContext, type:org.springframework.context.ConfigurableApplicationContext found, stop get bean., dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:49,767 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: dubbo://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=3556&register=true&release=2.7.3&side=provider&timestamp=1589721348810, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:50,338 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: provider://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=3556&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721348810, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:50,341 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:50,341 INFO [main][ServiceConfig.java:595] -  [DUBBO] Register dubbo service com.shanjupay.transaction.api.PayChannelService url dubbo://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=3556&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721348810 to registry registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=transaction-service&dubbo=2.0.2&pid=3556&qos.enable=false&qos.port=22250&registry=nacos&release=2.7.3&timestamp=1589721348809, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:50,347 INFO [main][AbstractRegistry.java:212] -  [DUBBO] Load registry cache file C:\Users\lige\.dubbo\dubbo-registry-transaction-service-127.0.0.1:8848.cache, data: {merchant-application/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0=dubbo://169.254.160.132:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=15904&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1589706244164&version=1.0.0}, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:50,348 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: dubbo://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=3556&register=true&release=2.7.3&side=provider&timestamp=1589721348810, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:50,364 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: provider://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=3556&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721348810, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:50,402 WARN [main][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=3556&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721348810, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:50,409 WARN [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=3556&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721348810, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:50,412 INFO [main][StartupInfoLogger.java:59] - Started TestPayChannelService in 13.985 seconds (JVM running for 16.205)
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:51,042 INFO [Thread-11][AwaitingNonWebApplicationListener.java:155] -  [Dubbo] Current Spring Boot Application is about to shutdown...
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:51,043 INFO [Thread-11][AbstractRegistryFactory.java:68] -  [DUBBO] Close all registries [nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=transaction-service&dubbo=2.0.2&interface=org.apache.dubbo.registry.RegistryService&pid=3556&qos.enable=false&qos.port=22250&release=2.7.3&timestamp=1589721348809], dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:51,044 INFO [Thread-11][AbstractRegistry.java:458] -  [DUBBO] Destroy registry:nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=transaction-service&dubbo=2.0.2&interface=org.apache.dubbo.registry.RegistryService&pid=3556&qos.enable=false&qos.port=22250&release=2.7.3&timestamp=1589721348809, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:51,044 INFO [Thread-11][AbstractRegistry.java:291] -  [DUBBO] Unregister: dubbo://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=3556&register=true&release=2.7.3&side=provider&timestamp=1589721348810, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:51,054 INFO [Thread-11][AbstractRegistry.java:467] -  [DUBBO] Destroy unregister url dubbo://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=3556&register=true&release=2.7.3&side=provider&timestamp=1589721348810, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:51,054 INFO [Thread-11][AbstractRegistry.java:320] -  [DUBBO] Unsubscribe: provider://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=3556&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721348810, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:51,054 INFO [Thread-11][AbstractRegistry.java:483] -  [DUBBO] Destroy unsubscribe url provider://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=3556&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721348810, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:51,055 INFO [Thread-11][DubboProtocol.java:616] -  [DUBBO] Close dubbo server: /169.254.160.132:20893, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:51,056 INFO [Thread-11][AbstractServer.java:153] -  [DUBBO] Close NettyServer bind /0.0.0.0:20893, export /169.254.160.132:20893, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:51,058 INFO [Thread-11][AbstractProtocol.java:79] -  [DUBBO] Unexport service: dubbo://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=3556&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721348810, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:51,061 INFO [Thread-11][Server.java:112] -  [DUBBO] qos-server stopped., dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:51,061 INFO [Thread-11][AbstractProtocol.java:79] -  [DUBBO] Unexport service: injvm://127.0.0.1/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=3556&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721348810, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:51,062 INFO [Thread-11][AbstractRegistry.java:291] -  [DUBBO] Unregister: dubbo://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=3556&register=true&release=2.7.3&side=provider&timestamp=1589721348810, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:51,063 INFO [Thread-11][AbstractRegistry.java:320] -  [DUBBO] Unsubscribe: provider://169.254.160.132:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=169.254.160.132&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=3556&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1589721348810, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:51,072 INFO [Exporter-Unexport-thread-1][RegistryProtocol.java:689] -  [DUBBO] Waiting 10000ms for registry to notify all consumers before unexport. Usually, this is called when you use dubbo API, dubbo version: 2.7.3, current host: 169.254.160.132
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:51,081 INFO [Thread-11][ExecutorConfigurationSupport.java:208] - Shutting down ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:51,088 INFO [Thread-11][DruidDataSource.java:1885] - {dataSource-1} closing ...
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:51,093 INFO [Thread-11][DruidDataSource.java:1955] - {dataSource-1} closed
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:51,094 INFO [Thread-11][DubboGenericServiceFactory.java:159] - The Dubbo GenericService ReferenceBeans are destroying...
[${project.name}][${env:SERVER_PORT}] 2020-05-17 21:15:51,094 INFO [Thread-11][AnnotationInjectedBeanPostProcessor.java:305] - class org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor was destroying!
